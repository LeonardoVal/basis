{"version":3,"sources":["../src/__prologue__.js","../src/core.js","../src/objects.js","../src/text.js","../src/math.js","../src/functions.js","../src/Initializer.js","../src/iterables.js","../src/Future.js","../src/HttpRequest.js","../src/Parallel.js","../src/Events.js","../src/Randomness.js","../src/Chronometer.js","../src/Statistic.js","../src/Statistics.js","../src/Logger.js","../src/__epilogue__.js"],"names":["__init__","Sermat","exports","__package__","__name__","__dependencies__","__SERMAT__","include","global","Function","f","raise","Error","Array","prototype","slice","call","arguments","join","raiseIf","condition","apply","this","callStack","exception","stack","stacktrace","split","e","obj","result","i","length","copy","objTo","k","objFrom","hasOwnProperty","objects","subconstructor","parent","constructor","Object","create","setPrototypeOf","__proto__","addMember","key","value","force","modifiers","pop","indexOf","forEach","scope","defineProperty","get","set","enumerable","configurable","addMembers","members","keys","map","id","declare","args","shift","undefined","initializer","unimplemented","cls","name","XML_ENTITIES","escapeXML","lpad","str","len","pad","isNaN","repeat","substr","rpad","hashCode","charCodeAt","&","<",">","\"","'","replace","c","escapeRegExp","formatDate","date","format","useUTC","Date","Text","match","charAt","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","toString","math","clamp","min","max","Math","sign","x","factorial","n","b","NaN","combinations","gauss_pdf","mean","variance","standardDeviation","sqrt","exp","pow","PI","gauss_erfc","z","abs","t","ans","gauss_cdf","functions","I","K","S","y","__infixOperator__","op","Initializer","subject","options","missingValueError","defaultValue","typeCheck","coerced","coerce","typeMismatchError","regexp","exec","invalidValueError","minimum","maximum","check","attr","overwrite","attrOverwriteError","ignore","bool","Boolean","string","String","number","Number","integer","floor","func","array","isArray","object","values","objectType","STOP_ITERATION","Iterable","__iter__","__iteratorFromString__","__iteratorFromArray__","bind","__iteratorFromObject__","__iteratorSingleton__","dual STOP_ITERATION","dual stop","dual catchStop","static __iteratorFromArray__","static __iteratorFromString__","static __iteratorFromObject__","static __iteratorSingleton__","finished","isEmpty","err","catchStop","count","from","iter","indicesOf","filter","v","indexWhere","indicesWhere","doFunction","ifFunction","forEachApply","_this","concat","mapFunction","filterFunction","mapApply","select","__selection__","member","filterApply","takeWhile","Infinity","stop","take","dropWhile","dropping","drop","head","tail","last","it","init","greater","evaluation","maxEval","push","lesser","minEval","sample","random","EMPTY","Randomness","DEFAULT","buffer","r","p","splice","sort","t1","t2","foldl","foldFunction","initial","scanl","foldr","reverse","scanr","sum","all","predicate","strict","any","sep","toArray","toObject","sorted","sortFunction","permutations","pool","current","indices","range","is","j","slices","size","groupBy","currentKey","currentValues","valueKey","pair","groupAll","DEFAULT_KEY","DEFAULT_ACCUM","xs","accum","elem","static zipWith","its","iterable","iterators","iterator","zipWith","static zip","zip","product","unshift","tuple","static product","chain","static chain","flatten","self","nub","comp","union","unionBy","intersection","intersectionBy","difference","differenceBy","static range","to","step","static repeat","static iterate","cycle","elems","JSON","stringify","Future","state","callbacks","resolve","__future__","static __isFuture__","STATES","isPending","isResolved","isRejected","isCancelled","__complete__","context","__completion__","callback","setTimeout","reject","reason","cancel","__register__","done","fail","__onCancel__","always","future","then","onResolved","onRejected","__isFuture__","static when","static then","static invoke","fn","when","error","static all","futures","doneCallback","index","static any","iterables","static sequence","rejection","action","lastValue","static doWhile","loopEnd","invoke","loop","checks","static whileDo","doWhile","static delay","ms","now","static retrying","times","delay","delayFactor","maxDelay","retrying","static imports","require","HttpRequest","__request__","XMLHttpRequest","request","method","url","content","headers","user","password","xhr","open","getOwnPropertyNames","setRequestHeader","onreadystatechange","readyState","status","send","getText","responseText","getJSON","parse","post","postJSON","Parallel","worker","newWorker","onmessage","__onmessage__","static newWorker","src","msg","base","eval","data","postMessage","blob","Blob","type","Worker","URL","createObjectURL","run","code","static run","parallel","terminate","importScripts","loadModule","module","recursive","sequence","dep","consoleLog","console","log","Events","config","initialize","__listeners__","events","eventName","listeners","emit","listener","on","isOpen","maxListeners","once","off","generator","__random__","randomInt","randomBool","prob","randoms","choice","choices","shuffle","normalizeWeights","weightedValues","weight","weightedChoice","chance","weightedChoices","maxProb","results","averagedDistribution","randomFunc","s","static __SERMAT__","identifier","serializer","materializer","LinearCongruential","m","a","seed","__arguments__","static numericalRecipies","static borlandC","static glibc","MersenneTwister","unsigned","__seed__","numbers","generate","Chronometer","reset","__timestamp__","time","tick","chronometer","total","Statistic","__count__","__sum__","__sqrSum__","__min__","__max__","__minData__","__maxData__","applies","squareSum","minData","maxData","average","biased","center","add","addAll","gain","factor","DEFAULT_GAIN_FACTOR","gainAll","addStatistic","stat","startTime","timestamp","__chronometer__","addTime","addTick","static z_test","sampleCount","sampleMean","p_lessThan","p_greaterThan","p_notEqual","z_test","static t_test1","sampleStandardDeviation","t_test1","static t_test2","sampleCount1","sampleCount2","sampleMean1","sampleMean2","sampleVariance1","sampleVariance2","pooledVariance","t_test2","other","kv","Statistics","__stats__","__id__","stats","keyVal","addObject","addStatistics","accumulation","acc","fsep","rsep","Logger","level","ROOT","appenders","passes","LEVELS","logger","message","appender","defaultFormat","TRACE","DEBUG","INFO","WARN","ERROR","FATAL","OK","FAIL","TODO","FIXME","trace","debug","info","warn","fatal","htmlFormat","tag","cssClassPrefix","appendToConsole","__consoleAppender__","entry","appendToFile","filepath","flags","encoding","stream","createWriteStream","fileAppender","write","appendToHtml","htmlElement","maxEntries","reversed","document","getElementById","getElementsByTagName","entries","htmlAppender","innerHTML","appendAsWorkerMessages","messageTag","postMessageAppender"],"mappings":"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","file":"creatartis-base.min.js","sourcesContent":["/** Package wrapper and layout.\n*/\nfunction __init__(Sermat) { \"use strict\";\n// Library layout. /////////////////////////////////////////////////////////////////////////////////\n\tvar exports = {\n\t\t__package__: 'creatartis-base',\n\t\t__name__: 'base',\n\t\t__init__: __init__,\n\t\t__dependencies__: [Sermat],\n\t\t__SERMAT__: { include: [] }\n\t};\n","/** # Core\n\nGeneric algorithms and utility definitions.\n*/\n\n/** Depending on the execution environment the global scope may be different: `window` in browsers,\n`global` under NodeJS, `self` in web workers, etc. `global` holds a reference to this \nobject.\n*/\nvar global = exports.global = (function () {\n\tvar f = Function;\n\treturn f('return this;')();\n})();\n\n/** `raise(message...)` builds a new instance of Error with the concatenation of the arguments as \nits message and throws it.\n*/\nvar raise = exports.raise = function raise() {\n\tthrow new Error(Array.prototype.slice.call(arguments, 0).join(''));\n};\n\n/** `raiseIf(condition, message...)` does the same as `raise` if `condition` is true.\n*/\nvar raiseIf = exports.raiseIf = function raiseIf(condition) {\n\tif (condition) {\n\t\traise.apply(this, Array.prototype.slice.call(arguments, 1));\n\t}\n};\n\n/** Browsers and different environments have different ways to obtain the current call stack. \n`callStack(error=none)` unifies these. Returns an array with the callstack of error or (if missing)\na new one is used, hence returning the current callStack.\n*/\nvar callStack = exports.callStack = function callStack(exception) {\n\tif (exception) {\n\t\treturn (exception.stack || exception.stacktrace || '').split('\\n');\n\t} else try {\n\t\tthrow new Error();\n\t} catch (e) {\n\t\texception = e;\n\t}\n\treturn (exception.stack || exception.stacktrace || '').split('\\n').slice(1);\n};\n\n/** Javascript object literals (as of ES5) cannot be built with expressions as keys. \n`obj(key, value...)` is an object constructor based on key-value pairs.\n*/\nvar obj = exports.obj = function obj() {\n\tvar result = ({});\n\tfor (var i = 0; i < arguments.length; i += 2) {\n\t\tresult[arguments[i] +''] = arguments[i+1];\n\t}\n\treturn result;\n};\n\n/** `copy(objTo, objFrom...)` copies all own properties of the given objects missing in `objTo` to \nit, and returns `objTo`. If only one object is given, a copy of the `objTo` object is returned.\n*/\nvar copy = exports.copy = function copy(objTo) {\n\tvar i = 1, k, objFrom;\n\tif (arguments.length < 2) {\n\t\tobjTo = {};\n\t\ti = 0;\n\t}\n\tfor (; i < arguments.length; i++) {\n\t\tobjFrom = arguments[i];\n\t\tfor (k in objFrom) {\n\t\t\tif (objFrom.hasOwnProperty(k) && !objTo.hasOwnProperty(k)) {\n\t\t\t\tobjTo[k] = objFrom[k];\n\t\t\t}\n\t\t}\n\t}\n\treturn objTo;\n};","/** # Objects\n\nOOP related functions and definitions.\n*/\nvar objects = exports.objects = (function () {\n\t/** Extending a constructor implies assigning as the subconstructor prototype an instance of the\n\tparent constructor. If no constructor is given, a new one is used.\n\t*/\n\tvar subconstructor = this.subconstructor = function subconstructor(parent, constructor) {\n\t\tvar proto, Placeholder;\n\t\tif (typeof constructor !== 'function') { // If no constructor is given ...\n\t\t\tconstructor = (function () { // ... provide a default constructor.\n\t\t\t\tparent.apply(this, arguments);\n\t\t\t});\n\t\t}\n\t\tconstructor.prototype = Object.create(parent.prototype);\n\t\tconstructor.prototype.constructor = constructor;\n\t\t/** The constructor function's prototype is changed so static properties are inherited as\n\t\twell.\n\t\t*/\n\t\tif (Object.setPrototypeOf) {\n\t\t\tObject.setPrototypeOf(constructor, parent);\n\t\t} else {\n\t\t\tconstructor.__proto__ = parent;\n\t\t}\n\t\treturn constructor;\n\t};\n\n\t/** `objects.addMember(constructor, key, value, force=false)` adds `value` as a member of the\n\tconstructor's prototype. If it already has a member with the `key`, it is overriden only if\n\t`force` is true.\n\n\tThe `key` may include modifiers for the member before the actual name and separated by\n\twhitespace. The implemented modifiers are:\n\n\t+ `static`: Adds the member to the constructor.\n\t+ `property`: Treats the `value` as a property descriptor to use with `Object.defineProperty()`.\n\t+ `const`: Adds the member as readonly. This also uses `Object.defineProperty()`, with a setter\n\tthat throws an error.\n\t*/\n\tvar addMember = this.addMember = function addMember(constructor, key, value, force) {\n\t\tvar modifiers = key.split(/\\s+/), scopes;\n\t\tkey = modifiers.pop();\n\t\tif (modifiers.indexOf('dual') >= 0) {\n\t\t\tscopes = [constructor, constructor.prototype];\n\t\t} else if (modifiers.indexOf('static') >= 0) {\n\t\t\tscopes = [constructor];\n\t\t} else {\n\t\t\tscopes = [constructor.prototype];\n\t\t}\n\t\tscopes.forEach(function (scope) {\n\t\t\tif (force || typeof scope[key] === 'undefined') {\n\t\t\t\tif (modifiers.indexOf('property') >= 0) {\n\t\t\t\t\treturn Object.defineProperty(scope, key, value);\n\t\t\t\t} else if (modifiers.indexOf('const') >= 0) {\n\t\t\t\t\treturn Object.defineProperty(scope, key, {\n\t\t\t\t\t\tget: function () { return value; },\n\t\t\t\t\t\tset: function () { throw new Error(key +\" is readonly!\"); },\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn scope[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\t/** `objects.addMembers(constructor, members, force=false)` adds all own properties of members\n\tto the constructor's prototype, using `objects.addMember`.\n\t*/\n\tvar addMembers = this.addMembers = function addMembers(constructor, members, force) {\n\t\tObject.keys(members).map(function (id) {\n\t\t\taddMember(constructor, id, members[id], force);\n\t\t});\n\t};\n\n\t/** The function `objects.declare(supers..., members={})` implements creatartis-base's object\n\toriented implementation, influenced by\n\t[Dojo's](http://dojotoolkit.org/reference-guide/1.9/dojo/_base/declare.html). The first super is\n\tconsidered the parent. The following supers add to the returned constructor's prototype, but do\n\tnot override. The given members always override.\n\t*/\n\tvar declare = exports.declare = this.declare = function declare() {\n\t\tvar args = Array.prototype.slice.call(arguments),\n\t\t\tparent = args.length > 1 ? args.shift() : Object,\n\t\t\tmembers = args.length > 0 ? args.pop() : {},\n\t\t\tconstructor = subconstructor(parent, \n\t\t\t\tmembers.hasOwnProperty('constructor') ? members.constructor : undefined), //WARN ({}).constructor == Object.\n\t\t\tinitializer = members[''];\n\t\tObject.keys(members).map(function (id) {\n\t\t\tif (id !== '' && id !== 'constructor') {\n\t\t\t\taddMember(constructor, id, members[id], true);\n\t\t\t}\n\t\t});\n\t\targs.forEach(function (members) {\n\t\t\tif (typeof members === 'function') {\n\t\t\t\tmembers = members.prototype;\n\t\t\t}\n\t\t\taddMembers(constructor, members, false);\n\t\t});\n\t\tif (typeof initializer === 'function') {\n\t\t\tinitializer.apply(constructor);\n\t\t}\n\t\treturn constructor;\n\t};\n\n\t/** Abstract methods can be quickly defined with `objects.unimplemented(cls, id)`. It returns a\n\tfunction that raises an \"unimplemented method\" exception. This is recommended, for better\n\tdebugging.\n\t*/\n\tvar unimplemented = this.unimplemented = function unimplemented(cls, id) {\n\t\treturn function () {\n\t\t\tthrow new Error((cls || this.constructor.name) +\".\"+ id +\" not implemented! Please override.\");\n\t\t};\n\t};\n\n\treturn this;\n}).call({}); //// objects.\n\nvar declare = objects.declare;\n","/** # Text\n\nText manipulation functions and definitions.\n*/\n\n/** `lpad(str, len, pad=' ')` returns a copy of the `str` string padded with `pad` (or space by \ndefault) to the left upto `len` length.\n*/\nexports.lpad = function lpad(str, len, pad) {\n\tstr = str +'';\n\tif (isNaN(len) || str.length >= len) {\n\t\treturn str;\n\t} else {\n\t\tpad = (pad || ' ') +'';\n\t\treturn (pad.repeat((len - str.length) / pad.length + 1) + str).substr(-len);\n\t}\n};\n\n/** `rpad(str, len, pad=' ')` returns a copy of the `str` string padded with `pad` (or space by \ndefault) to the right upto `len` length.\n*/\nexports.rpad = function rpad(str, len, pad) {\n\tstr = str +'';\n\tif (isNaN(len) || str.length >= len) {\n\t\treturn str;\n\t} else {\n\t\tpad = (pad || ' ') +'';\n\t\treturn (str + pad.repeat((len - str.length) / pad.length + 1)).substr(0, len);\n\t}\n};\n\n/** `hashCode(str)` calculates a hash number for the given string.\n*/\nexports.hashCode = function hashCode(str) {\n\tstr = str +'';\n\tvar result = 0,\n\t\tlen = str.length;\n\tfor (var i = 0; i < len; ++i) { \n\t\tresult = (result * 31 + str.charCodeAt(i)) & 0x7FFFFFFF;\n\t}\n\treturn result;\n};\n\n// ## Formatting, encoding and decoding ############################################################\n\n/** `escapeXML(str)` returns the string with XML reserved characters replaced by the corresponding \ncharacter entities.\n*/\nexports.escapeXML = (function () {\n\tvar XML_ENTITIES = {\n\t\t\t'&': '&amp;', \n\t\t\t'<': '&lt;', '>': '&gt;', \n\t\t\t'\"': '&quot;', \"'\": '&apos;' \n\t\t},\n\t\tescapeXML = function escapeXML(str) {\n\t\t\treturn (str +'').replace(/[&<>\"']/g, function (c) {\n\t\t\t\treturn XML_ENTITIES[c];\n\t\t\t});\n\t\t};\n\tescapeXML.XML_ENTITIES = XML_ENTITIES;\n\treturn escapeXML;\n})();\n\n/** `escapeRegExp(str)` returns the `str` string with the reserved characters of regular expressions\nescaped with `'\\'`.\n*/\nexports.escapeRegExp = function escapeRegExp(str) {\n\treturn (str +'').replace(/[\\-\\[\\]{}()*+?.^$\\\\]/g, '\\\\$&');\n};\n\n/** `formatDate(date=now, format=Date.toString, useUTC=false)` formats a Date. The `format` string \nmay use `y` for year, `m` for month, `d` for day (in month), `h` for hour (24), `H` for hour \n(am/pm), `n` for minutes, `s` for seconds, `S` for milliseconds, and `a` or `A` for am/pm.\n*/\nexports.formatDate = function formatDate(date, format, useUTC) {\n\tdate = date || new Date();\n\tvar lpad = Text.lpad;\n\treturn !format ? date.toString() : format.replace(/(y+|m+|d+|h+|H+|n+|s+|S+|a+|A+|\"[^\"]*\")/g, \n\t\tfunction (match) {\n\t\t\tswitch (match.charAt(0)) {\n\t\t\tcase 'y': return lpad((useUTC ? date.getUTCFullYear() : date.getFullYear()) +'', match.length, '0');\n\t\t\tcase 'm': return lpad(((useUTC ? date.getUTCMonth() : date.getMonth()) + 1) +'', match.length, '0');\n\t\t\tcase 'd': return lpad((useUTC ? date.getUTCDate() : date.getDate()) +'', match.length, '0');\n\t\t\tcase 'h': return lpad((useUTC ? date.getUTCHours() : date.getHours()) +'', match.length, '0');\n\t\t\tcase 'H': return lpad((useUTC ? date.getUTCHours() : date.getHours()) % 12 +'', match.length, '0');\n\t\t\tcase 'n': return lpad((useUTC ? date.getUTCMinutes() : date.getMinutes()) +'', match.length, '0');\n\t\t\tcase 's': return lpad((useUTC ? date.getUTCSeconds() : date.getSeconds()) +'', match.length, '0');\n\t\t\tcase 'S': return lpad((useUTC ? date.getUTCMilliseconds() : date.getMilliseconds()) +'', match.length, '0');\n\t\t\tcase 'a': return ['am','pm'][~~((useUTC ? date.getUTCHours() : date.getHours()) / 12)].substr(0, match.length);\n\t\t\tcase 'A': return ['AM','PM'][~~((useUTC ? date.getUTCHours() : date.getHours()) / 12)].substr(0, match.length);\n\t\t\tcase '\"': return match.substr(1, match.length-2);\n\t\t\tdefault: return match;\n\t\t\t}\n\t\t});\n};\n","/** # Math\n\nMathematical and numerical functions and utilities.\n*/\nvar math = exports.math = {};\n\n// ## Conditionals #################################################################################\n\n/** Clamps forces a `value` to be between `min` and `max`.\n*/\nmath.clamp = function clamp(value, min, max) {\n\treturn Math.min(max, Math.max(min, value));\n};\n\n/** A simple function to calculate the sign of a number. See [Math.sign](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign).\n*/\nmath.sign = function sign(x) {\n\tx = +x;\n\treturn (x === 0 || isNaN(x)) ? x : x > 0 ? 1 : -1;\n};\n\n// ## Combinatorics ################################################################################\n\n/** The `factorial` functions needs little introduction. It receives `n` and returns `n!`. Argument\n`b` can be used to stop the recursion before zero, which is useful to calculate `n!/b!` efficiently.\n*/\nvar factorial = math.factorial = function factorial(n, b) {\n\tn = n|0;\n\tb = Math.max(0, b|0);\n\tif (n < 0) {\n\t\treturn NaN;\n\t} else {\n\t\tfor (var f = 1; n > b; --n) {\n\t\t\tf *= n;\n\t\t}\n\t\treturn f;\n\t}\n};\n\n/** The `combinations` of selecting `k` elements from a set of `n`, not mattering in which order. It\nis calculated as `n!/k!/(n-k)!`.\n*/\nmath.combinations = function combinations(n, k) {\n\treturn factorial(n, k) / factorial(n - k);\n};\n\n// ## Probability ##################################################################################\n\n/** The probability density function (or PDF) of the normal (or gaussian) distribution. The \nparameters `mean` and `variance` default to the standard normal (i.e `mean=0` and `variance=1`).\n*/\nmath.gauss_pdf = function gauss_pdf(value, mean, variance) {\n\tmean = isNaN(mean) ? 0 : +mean;\n\tvariance = isNaN(variance) ? 1 : +variance;\n\tvar standardDeviation = Math.sqrt(variance);\n\n    return Math.exp(-Math.pow(x - mean, 2) / (2 * variance)) / \n\t\tstandardDeviation * Math.sqrt(2 * Math.PI);\n};\n\n/** Complementary error function routine based on Chebyshev fitting as explained in \n[Numerical Recipes in C (2nd edition)](http://www.nr.com/), with fractional error everywhere less \nthan 1.2e-7.\n*/\nmath.gauss_erfc = function gauss_erfc(value) {\n\tvar z = Math.abs(value),\n\t\tt = 1.0 / (1.0 + 0.5 * z),\n\t\tans = t * Math.exp(-z * z - 1.26551223 + t * (1.00002368 + t * (0.37409196 +\n\t\t\tt * (0.09678418 + t * (-0.18628806 + t * (0.27886807 + t * (-1.13520398 + \n\t\t\tt * (1.48851587 + t * (-0.82215223 + t * 0.17087277)))))))));\n    return value >= 0.0 ? ans : 2.0 - ans;\n};\n\n/** The cumulative density function (or CDF) of the normal (or gaussian) distribution. The \nparameters `mean` and `variance` default to the standard normal (i.e `mean=0` and `variance=1`).\n*/\nmath.gauss_cdf = function gauss_cdf(value, mean, variance) {\n\tmean = isNaN(mean) ? 0 : +mean;\n\tvariance = isNaN(variance) ? 1 : +variance;\n\tvar standardDeviation = Math.sqrt(variance);\n\t\n\treturn math.gauss_erfc(-(value - mean) / (standardDeviation * Math.sqrt(2))) / 2;\n};\n","/** # Functions\n\nUtilities to simplify functional programming in Javascript.\n*/\nvar functions = exports.functions = {};\n\n/** ## Premade functions. ##########################################################################\n\nWithout currying, is sometimes cumbersome to pass a simple functions (like Javascript operators) to\na higher order function like `Array.map`. These premade functions try to make this easier.\n*/\n\n/** Must have [SKI](https://en.wikipedia.org/wiki/SKI_combinator_calculus). The identity function\n`I` or `id` returns its argument as it is given.\n*/\nfunctions.I = functions.id = function id(x) {\n\treturn x;\n};\n\n/** The `K` function takes two arguments and returns the first one, ignoring the second one.\n*/\nfunctions.K = function id(x) {\n\treturn x;\n};\n\n/** The `S` function takes three arguments, the first two being functions. This may probably have\nlittle use, but it is added for cultural reasons.\n*/\nfunctions.S = function id(x, y, z) {\n\treturn x.call(this, z, y.call(this, z));\n};\n\n/** Almost all Javascript's operators are available as functions. A function for the comma does not\nmake much sense.\n */\nfunctions.__infixOperator__ = function (op) {\n\treturn new Function('x', 'y', 'return (x '+ op +' y);');\n};\n\n'+ * - / % < > <= >= == === != !== & | ^ << >> >>> && || in instanceof'.split(/\\s+/).forEach(function (op) {\n\tvar f = functions.__infixOperator__(op);\n\tfunctions[op] = f;\n\tfunctions['('+ op +')'] = f;\n});\n\nfunctions['~'] = functions['~()'] = new Function('x', 'return ~x;');\nfunctions['!'] = functions['!()'] = new Function('x', 'return !x;');\nfunctions['+()'] = new Function('x', 'return +x;');\nfunctions['-()'] = new Function('x', 'return -x;');\nfunctions['typeof'] = functions['typeof()'] = new Function('x', 'return typeof x;');\nfunctions['void'] = functions['void()'] = new Function('x', 'return void x;');\n\nfunctions['.'] = functions['(.)'] = new Function('x', 'y', 'return x[y];');\nfunctions['?:'] = functions['(?:)'] = new Function('x', 'y', 'z', 'return x ? y : z;');\n","/** ## Initializer\n\nInitializers are object builders, allowing the declaration of default values, type checks and\ncoercions, and other checks.\n*/\n\nvar Initializer = exports.Initializer = declare({\n\t/** An initializer modifies a `subject` taking values from `args`. All by default are new empty\n\tobjects.\n\t*/\n\tconstructor: function Initializer(subject, args) {\n\t\tthis.subject = subject || {};\n\t\tthis.args = args || {};\n\t},\n\n\t/** `get(id, options)` gets the value for `id`. If it is missing, `options.defaultValue` is\n\tused as the default value if defined. Else an error is raised.\n\n\tIf `options.type` is defined, the value is checked to be a member of said type. If \n\t`options.coerce` is true, the value may be coerced to said type.\tThe `option.check` function\n\tcan be defined to check the value further. It will be called with the value, and is expected to\n\traise errors on failed conditions.\n\n\tOther options include:\n\n\t+ `options.regexp`: the value is matched agains a regular expression.\n\n\t+ `options.minimum`: the value has to be greater than or equal to this value.\n\n\t+ `options.maximum`: the value has to be less than or equal to this value.\n\t*/\n\tget: function get(id, options) {\n\t\tvar value;\n\t\toptions = options || {};\n\t\tif (!this.args.hasOwnProperty(id)) {\n\t\t\traiseIf(!options.hasOwnProperty(\"defaultValue\"), \n\t\t\t\toptions.missingValueError || \"Missing argument `\"+ id +\"`!\");\n\t\t\tvalue = options.defaultValue;\n\t\t} else {\n\t\t\tvalue = this.args[id];\n\t\t}\n\t\tif (options.typeCheck) {\n\t\t\tvar coerced = options.typeCheck(value, !!options.coerce);\n\t\t\traiseIf(typeof coerced === 'undefined', options.typeMismatchError ||\n\t\t\t\t\"Incompatible value (\"+ value +\") for `\"+ id +\"`!\");\n\t\t\tvalue = coerced;\n\t\t}\n\t\traiseIf(options.regexp && !options.regexp.exec(value), options.invalidValueError || // Check further constraints.\n\t\t\t\"Value (\"+ value +\") for `\"+ id +\"` does not match \"+ options.regexp +\"!\");\n\t\traiseIf(options.hasOwnProperty(\"minimum\") && options.minimum > value, options.invalidValueError ||\n\t\t\t\"Value (\"+ value +\") for `\"+ id +\"` must be greater than or equal to \"+ options.minimum +\"!\");\n\t\traiseIf(options.hasOwnProperty(\"maximum\") && options.maximum < value, options.invalidValueError ||\n\t\t\t\"Value (\"+ value +\") for `\"+ id +\"` must be less than or equal to \"+ options.maximum +\"!\");\n\t\tif (typeof options.check === 'function') {\n\t\t\toptions.check.call(this.subject, value, id, options);\n\t\t}\n\t\treturn value;\n\t},\n\n\t/** `attr(id, options={})` assigns the `id` property, performing all necessary verifications.\n\tIf the subject already has the attribute defined and `options.overwrite` is false, an error is\n\traised. Any error is ignored and the assignment is skipped if `options.ignore` is true.\n\t*/\n\tattr: function attr(id, options) {\n\t\toptions = options || {};\n\t\ttry {\n\t\t\traiseIf(options.hasOwnProperty(\"overwrite\") && !options.overwrite && this.subject.hasOwnProperty(id),\n\t\t\t\toptions.attrOverwriteError || \"Attribute <\"+ id +\"> is already defined!\");\n\t\t\tthis.subject[id] = this.get(id, options);\n\t\t} catch (exception) {\n\t\t\tif (!options.ignore) {\n\t\t\t\tthrow exception; // Do not ignore the error and throw it.\n\t\t\t}\n\t\t}\n\t\treturn this; // For chaining.\n\t},\n\n\t/** ## Shortcuts ##############################################################################\n\n\tThe following methods simplify the definitions of properties using `attr()`:\n\t*/\n\n\t/** + `bool(id, options)` assigns the `id` property with a truth value.\n\t*/\n\tbool: function bool(id, options) {\n\t\toptions = options || {};\n\t\toptions.typeCheck = function bool_typeCheck(value, coerce) {\n\t\t\tif (typeof value === 'boolean' || \n\t\t\t\tvalue !== undefined && value !== null && value.constructor === Boolean) {\n\t\t\t\treturn value;\n\t\t\t} else if (coerce) {\n\t\t\t\treturn !!value;\n\t\t\t}\n\t\t};\n\t\treturn this.attr(id, options);\n\t},\n\n\t/** + `string(id, options)` assigns the `id` property with a string.\n\t*/\n\tstring: function string(id, options) {\n\t\toptions = options || {};\n\t\toptions.typeCheck = function string_typeCheck(value, coerce) {\n\t\t\tif (typeof value === 'string' || \n\t\t\t\tvalue !== undefined && value !== null && value.constructor === String) {\n\t\t\t\treturn value;\n\t\t\t} else if (coerce) {\n\t\t\t\treturn ''+ value;\n\t\t\t}\n\t\t};\n\t\treturn this.attr(id, options);\n\t},\n\n\t/** + `number(id, options)` assigns the `id` property with a numerical value.\n\t*/\n\tnumber: function number(id, options) {\n\t\toptions = options || {};\n\t\toptions.typeCheck = function number_typeCheck(value, coerce) {\n\t\t\tif (typeof value === 'number' || \n\t\t\t\tvalue !== undefined && value !== null && value.constructor === Number) {\n\t\t\t\treturn value;\n\t\t\t} else if (coerce) {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t};\n\t\treturn this.attr(id, options);\n\t},\n\n\t/** + `integer(id, options)` assigns the `id` property with an integer.\n\t*/\n\tinteger: function integer(id, options) {\n\t\toptions = options || {};\n\t\toptions.typeCheck = function integer_typeCheck(value, coerce) {\n\t\t\tif (Math.floor(value) === value) {\n\t\t\t\treturn value;\n\t\t\t} else if (coerce) {\n\t\t\t\treturn Math.floor(+value);\n\t\t\t}\n\t\t};\n\t\treturn this.attr(id, options);\n\t},\n\n\t/** + `func(id, options)` assigns the `id` property with a function.\n\t*/\n\tfunc: function func(id, options) {\n\t\toptions = options || {};\n\t\toptions.typeCheck = function func_typeCheck(value, coerce) {\n\t\t\tif (typeof value === 'function' || \n\t\t\t\tvalue !== undefined && value !== null && value.constructor === Function) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\t\treturn this.attr(id, options);\n\t},\n\n\t/** + `array(id, options)` assigns the `id` property with an array.\n\t*/\n\tarray: function array(id, options) {\n\t\toptions = options || {};\n\t\toptions.typeCheck = function array_typeCheck(value, coerce) {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\t//TODO Check length and element types.\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\t\treturn this.attr(id, options);\n\t},\n\n\t/** + `object(id, options)` assigns the `id` property with an object. Options may include:\n\n\t\t* `options.objectType`: object's class.\n\t*/\n\tobject: function object(id, options) {\n\t\toptions = options || {};\n\t\toptions.typeCheck = function object_typeCheck(values, coerce) {\n\t\t\tif (typeof value === 'object' && (typeof options.objectType !== 'function' || \n\t\t\t\tvalue instanceof options.objectType)) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\t\treturn this.attr(id, options);\n\t}\n}); // declare Initializer.\n","/** # Iterables\n\nStandard implementation of iterables and iterators (a.k.a. enumerations or sequences), and many\nfunctions that can be built with it. This implementation is inspired in the Python iterables. An\niterable is an object with a method `__iter__()` which returns an iterator function. An iterator\nfunction returns the next element in the sequence, or raises `STOP_ITERATION` if the sequence has\nended.\n*/\nvar STOP_ITERATION = new Error('Sequence has ended.');\n\nvar Iterable = exports.Iterable = declare({\n\t/** The Iterable constructor builds different types of sequences depending on the given object.\n\tIt supports strings (iterating over each character), arrays, objects (key-value pairs) and\n\tfunctions (assuming it is the iterator maker). A value of `null` or `undefined` is not allowed.\n\tEverything else is assumed to be the only value of a singleton sequence. If the object has an\n\t`__iter__` method it is assumed to be an Iterable already. In this case a copy of that Iterable\n\tis built.\n\t*/\n\tconstructor: function Iterable(obj) {\n\t\tif (obj === null || obj === undefined) {\n\t\t\tthrow new Error('Iterable source is null or undefined.');\n\t\t} else if (typeof obj === 'function') {\n\t\t\tthis.__iter__ = obj;\n\t\t} else if (typeof obj === 'string') {\n\t\t\tthis.__iter__ = Iterable.__iteratorFromString__(obj);\n\t\t} else if (Array.isArray(obj)) {\n\t\t\tthis.__iter__ = Iterable.__iteratorFromArray__(obj);\n\t\t} else if (typeof obj === 'object') {\n\t\t\tif (typeof obj.__iter__ === 'function') {\n\t\t\t\tthis.__iter__ = obj.__iter__.bind(obj);\n\t\t\t} else {\n\t\t\t\tthis.__iter__ = Iterable.__iteratorFromObject__(obj);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.__iter__ = Iterable.__iteratorSingleton__(obj);\n\t\t}\n\t},\n\n\t/** `STOP_ITERATION` is the singleton error raised when an sequence\thas finished. It is catched\n\tby all Iterable's functions.\n\t*/\n\t\"dual STOP_ITERATION\": STOP_ITERATION,\n\n\t/** `stop()` raises the STOP_ITERATION exception. If used inside an iterator it breaks the\n\titeration.\n\t*/\n\t\"dual stop\": function stop() {\n\t\tthrow STOP_ITERATION;\n\t},\n\n\t/** `catchStop(exception)` does nothing `exception` is `STOP_ITERATION`, but if it isn't the\n\texception is thrown.\n\t*/\n\t\"dual catchStop\": function catchStop(exception) {\n\t\tif (exception !== STOP_ITERATION) {\n\t\t\tthrow exception;\n\t\t}\n\t},\n\n\t// ## Iterables from common datatypes ##########################################################\n\n\t/** `__iteratorFromArray__(array)` returns the `__iter__` function that builds the iterators of\n\titerables based on arrays.\n\t*/\n\t\"static __iteratorFromArray__\": function __iteratorFromArray__(array) {\n\t\treturn function __iter__() {\n\t\t\tvar i = 0, iterable = this;\n\t\t\treturn function __arrayIterator__() {\n\t\t\t\tif (i < array.length) {\n\t\t\t\t\treturn array[i++];\n\t\t\t\t} else {\n\t\t\t\t\tthrow STOP_ITERATION;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t},\n\n\t/** The iterables based on strings iterate character by character. `__iteratorFromString__(str)`\n\treturns the `__iter__` function that builds iterators over the `str` string.\n\t*/\n\t\"static __iteratorFromString__\": function __iteratorFromString__(str) {\n\t\treturn function __iter__() {\n\t\t\tvar i = 0, iterable = this;\n\t\t\treturn function __stringIterator__() {\n\t\t\t\tif (i < str.length) {\n\t\t\t\t\treturn str.charAt(i++);\n\t\t\t\t} else {\n\t\t\t\t\tthrow STOP_ITERATION;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t},\n\n\t/** Iterables over objects iterate over pairs `[name, value]` for each property of the object.\n\t`__iteratorFromObject__(obj)` return the `__iter__` function for these sequences.\n\t*/\n\t\"static __iteratorFromObject__\": function __iteratorFromObject__(obj) {\n\t\treturn function __iter__() {\n\t\t\tvar keys = Object.keys(obj), iterable = this;\n\t\t\treturn function __objectIterator__() {\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tvar k = keys.shift();\n\t\t\t\t\treturn [k, obj[k]];\n\t\t\t\t} else {\n\t\t\t\t\tthrow STOP_ITERATION;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t},\n\n\t/** Singleton iterables have only one value in their sequence. Their `__iter__` function can be\n\tobtained with `__iteratorSingleton__(x)`.\n\t*/\n\t\"static __iteratorSingleton__\": function __iteratorSingleton__(x) {\n\t\treturn function __iter__() {\n\t\t\tvar finished = false, iterable = this;\n\t\t\treturn function __singletonIterator__() {\n\t\t\t\tif (!finished) {\n\t\t\t\t\tfinished = true;\n\t\t\t\t\treturn x;\n\t\t\t\t} else {\n\t\t\t\t\tthrow STOP_ITERATION;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t},\n\n\t// ## Sequence predicates ######################################################################\n\n\t/** `isEmpty()` returns if the sequence has no elements.\n\t*/\n\tisEmpty: function isEmpty() {\n\t\ttry {\n\t\t\tthis.__iter__()();\n\t\t\treturn false;\n\t\t} catch (err) {\n\t\t\tthis.catchStop(err);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// ## Sequence information #####################################################################\n\n\t/** `count()` counts the number of elements in the sequence.\n\t*/\n\tcount: function count() {\n\t\tvar result = 0;\n\t\tthis.forEach(function (x) {\n\t\t\tresult++;\n\t\t});\n\t\treturn result;\n\t},\n\n\t/** `length()` is just a synonym for `count()`.\n\t*/\n\tlength: function length() {\n\t\treturn this.count();\n\t},\n\n\t/** `indexOf(value, from=0)` is analogous to the array's namesake method. Returns the first\n\tposition of the given `value`, or -1 if it is not found.\n\t*/\n\tindexOf: function indexOf(value, from) {\n\t\tfrom = from|0;\n\t\tvar iter = this.__iter__(), x, i = 0;\n\t\ttry {\n\t\t\tfor (x = iter(); true; x = iter(), ++i) {\n\t\t\t\tif (i >= from && x === value) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.catchStop(err);\n\t\t}\n\t\treturn -1;\n\t},\n\n\t/** `indexesOf(value, from=0)` is a sequence of the positions of the value in this iterable.\n\t*/\n\tindicesOf: function indexesOf(value, from) {\n\t\tfrom = from|0;\n\t\treturn this.filter(function (v, i) {\n\t\t\treturn i >= from && v === value;\n\t\t}, function (v, i) {\n\t\t\treturn i;\n\t\t});\n\t},\n\n\t/** `indexWhere(condition, from=0)` returns the position of the first value of this iterable\n\tthat complies with the given `condition`, or -1 if there is none.\n\t*/\n\tindexWhere: function indexWhere(condition, from) {\n\t\tfrom = from|0;\n\t\tvar iter = this.__iter__(), x, i = 0;\n\t\ttry {\n\t\t\tfor (x = iter(); true; x = iter(), ++i) {\n\t\t\t\tif (i >= from && condition(x, i)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.catchStop(err);\n\t\t}\n\t\treturn -1;\n\t},\n\n\t/** `indexesWhere(condition, from=0)` is a sequence of the positions in this iterable of values\n\tthat comply with the given `condition`.\n\t*/\n\tindicesWhere: function indexesWhere(condition, from) {\n\t\tfrom = from|0;\n\t\treturn this.filter(function (v, i) {\n\t\t\treturn i >= from && condition(v);\n\t\t}, function (v, i) {\n\t\t\treturn i;\n\t\t});\n\t},\n\n\t// ## Iteration methods ########################################################################\n\n\t/** `forEach(doFunction, ifFunction)` applies `doFunction` to all elements complying with\n\t`ifFunction`, and returns the last result. If no `ifFunction` is given, it iterates through all\n\tthe elements in the sequence. Both functions get the current value and position as arguments.\n\t*/\n\tforEach: function forEach(doFunction, ifFunction) {\n\t\tvar iter = this.__iter__(), x, i = 0, result;\n\t\ttry {\n\t\t\tfor (x = iter(); true; x = iter(), i++) {\n\t\t\t\tif (!ifFunction || ifFunction(x, i)) {\n\t\t\t\t\tresult = doFunction(x, i);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.catchStop(err);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/** `forEachApply(doFunction, ifFunction, _this)` is similar to `forEach` but instead of calling\n\t`doFunction`, it uses `apply`. It assumes the elements in the sequence are arrays of arguments\n\tto pass to the functions.\n\t*/\n\tforEachApply: function forEachApply(doFunction, ifFunction, _this) {\n\t\t_this = _this || this;\n\t\treturn this.forEach(function (args, i) {\n\t\t\treturn doFunction.apply(_this, args.concat([i]));\n\t\t}, ifFunction);\n\t},\n\n\t/** `map(mapFunction, filterFunction)` returns an iterable iterating on the results of applying\n\t`mapFunction` to each of this iterable elements. If `filterFunction` is given, only elements for\n\twhich `filterFunction` returns true are considered.\n\t*/\n\tmap: function map(mapFunction, filterFunction) {\n\t\tvar from = this; // for closures.\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar iter = from.__iter__(), x, i = -1;\n\t\t\treturn function __mapIterator__() {\n\t\t\t\tfor (x = iter(); true; x = iter()) {\n\t\t\t\t\ti++;\n\t\t\t\t\tx = mapFunction ? mapFunction(x, i) : x;\n\t\t\t\t\tif (!filterFunction || filterFunction(x, i)) {\n\t\t\t\t\t\treturn x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow STOP_ITERATION;\n\t\t\t};\n\t\t});\n\t},\n\n\t/** `mapApply(mapFunction, filterFunction, _this)` is similar to `map` but instead of calling\n\t`mapFunction`, it uses `apply`. It assumes the elements in the sequence are arrays of arguments\n\tto pass to the functions.\n\t*/\n\tmapApply: function mapApply(mapFunction, filterFunction, _this) {\n\t\t_this = _this || this;\n\t\treturn this.map(function (args, i) {\n\t\t\treturn mapFunction.apply(_this, args.concat([i]));\n\t\t}, filterFunction);\n\t},\n\n\t/** `select(members)` is a shortcut for a map that extracts a member or members from the objects\n\tin the sequence. If `members` is an object, then for each value in the sequence another object\n\tis built with a selection for each key in the object. Arrays can also be built in a similar\n\tfashion.\n\t*/\n\tselect: (function () {\n\t\tfunction __selection__(from, member) {\n\t\t\tif (Array.isArray(member)) {\n\t\t\t\treturn member.map(__selection__.bind(null, from));\n\t\t\t} else if (typeof member === 'object') {\n\t\t\t\tvar result = {};\n\t\t\t\tObject.keys(member).forEach(function (k) {\n\t\t\t\t\tresult[k] = __selection__.call(null, from, member[k]);\n\t\t\t\t});\n\t\t\t\treturn result;\n\t\t\t} else if (typeof member === 'function') {\n\t\t\t\treturn member(from);\n\t\t\t} else {\n\t\t\t\treturn from[member];\n\t\t\t}\n\t\t}\n\t\treturn function select(members) {\n\t\t\treturn this.map(function (obj) {\n\t\t\t\treturn __selection__(obj, members);\n\t\t\t});\n\t\t};\n\t})(),\n\n\t// ## Sequence selection and filtering #########################################################\n\n\t/** `filter(filterFunction, mapFunction)` returns an iterable of this iterable elements for\n\twhich `filterFunction` returns true. If `mapFunction` is given it is applied before yielding the\n\telements.\n\t*/\n\tfilter: function filter(filterFunction, mapFunction) {\n\t\tvar from = this; // for closures.\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar iter = from.__iter__(), x, i = -1;\n\t\t\treturn function __mapIterator__() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tx = iter();\n\t\t\t\t\ti++;\n\t\t\t\t\tif (filterFunction ? filterFunction(x, i) : x) {\n\t\t\t\t\t\treturn mapFunction ? mapFunction(x, i) : x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow STOP_ITERATION;\n\t\t\t};\n\t\t});\n\t},\n\n\t/** `filterApply(filterFunction, mapFunction, _this)` is similar to `filter` but instead of\n\tcalling the given functions, it uses `apply`. It assumes the elements in the sequence are arrays\n\tof arguments to pass to the functions.\n\t*/\n\tfilterApply: function filterApply(filterFunction, mapFunction, _this) {\n\t\t_this = _this || this;\n\t\treturn this.filter(function (args, i) {\n\t\t\treturn filterFunction.apply(_this, args.concat([i]));\n\t\t}, mapFunction && function (args, i) {\n\t\t\treturn mapFunction.apply(_this, args.concat([i]));\n\t\t});\n\t},\n\n\t/** `takeWhile(condition)` return an iterable with the first elements that verify the given\n\tcondition.\n\t*/\n\ttakeWhile: function takeWhile(condition) {\n\t\tvar from = this; // for closures.\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar iter = from.__iter__(),\n\t\t\t\ti = 0;\n\t\t\treturn function __takeWhileIterator__() {\n\t\t\t\tif (i >= 0) {\n\t\t\t\t\tvar x = iter();\n\t\t\t\t\tif (condition(x, i)) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\treturn x;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti = -Infinity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfrom.stop();\n\t\t\t};\n\t\t});\n\t},\n\n\t/** `take(n=1)` return an iterable with the first `n` elements of this one.\n\t*/\n\ttake: function take(n) {\n\t\tn = isNaN(n) ? 1 : n | 0;\n\t\treturn this.takeWhile(function (x, i) {\n\t\t\treturn i < n;\n\t\t});\n\t},\n\n\t/** `dropWhile(condition)` returns an iterable with the same elements than this, except the\n\tfirst ones that comply with the condition.\n\t*/\n\tdropWhile: function dropWhile(condition) {\n\t\tvar from = this; // for closures.\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar iter = from.__iter__(),\n\t\t\t\ti = 0,\n\t\t\t\tdropping = true;\n\t\t\treturn function __dropWhileIterator__() {\n\t\t\t\tvar x;\n\t\t\t\tdo {\n\t\t\t\t\tx = iter();\n\t\t\t\t\tdropping = dropping && condition(x, i);\n\t\t\t\t\ti++;\n\t\t\t\t} while (dropping);\n\t\t\t\treturn x;\n\t\t\t};\n\t\t});\n\t},\n\n\t/** `drop(n=1)` returns an iterable with the same elements than this, except the first `n` ones.\n\t*/\n\tdrop: function drop(n) {\n\t\tn = isNaN(n) ? 1 : n | 0;\n\t\treturn this.dropWhile(function (x, i) {\n\t\t\treturn i < n;\n\t\t});\n\t},\n\n\t/** `head(defaultValue)` returns the first element. If the sequence is empty it returns\n\t`defaultValue`, or raise an exception if one is not given.\n\t*/\n\thead: function head(defaultValue) {\n\t\ttry {\n\t\t\treturn this.__iter__()();\n\t\t} catch (err) {\n\t\t\tthis.catchStop(err);\n\t\t\tif (arguments.length < 1) {\n\t\t\t\tthrow new Error(\"Tried to get the head value of an empty Iterable.\");\n\t\t\t} else {\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\t},\n\n\t/** `tail()` returns an iterable with the same elements than this, except the first one.\n\t*/\n\ttail: function tail() {\n\t\tvar from = this; // for closures.\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar iter = from.__iter__();\n\t\t\ttry {\n\t\t\t\titer();\n\t\t\t} catch (err) {\n\t\t\t\tthis.catchStop(err);\n\t\t\t\tthrow new Error(\"Tried to get the tail of an empty Iterable.\");\n\t\t\t}\n\t\t\treturn iter;\n\t\t});\n\t},\n\n\t/** `last(defaultValue)` returns the last element. If the sequence is empty it returns\n\t`defaultValue`, or raise an exception if one is not given.\n\t*/\n\tlast: function last(defaultValue) {\n\t\tvar result, isEmpty = true, it = this.__iter__();\n\t\ttry {\n\t\t\tfor (isEmpty = true; true; isEmpty = false) {\n\t\t\t\tresult = it();\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.catchStop(err);\n\t\t\tif (!isEmpty) {\n\t\t\t\treturn result;\n\t\t\t} else if (arguments.length < 1) {\n\t\t\t\tthrow new Error(\"Tried to get the last value of an empty Iterable.\");\n\t\t\t} else {\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t}\n\t},\n\n\t/** `init()` returns an iterable with the same elements than this, except the last one.\n\t*/\n\tinit: function init() {\n\t\tvar from = this; // for closures.\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar iter = from.__iter__(), last;\n\t\t\ttry {\n\t\t\t\tlast = iter();\n\t\t\t} catch (err) {\n\t\t\t\tthis.catchStop(err);\n\t\t\t\tthrow new Error(\"Tried to get the init of an empty Iterable.\");\n\t\t\t}\n\t\t\treturn function __mapIterator__() {\n\t\t\t\tvar result = last;\n\t\t\t\tlast = iter();\n\t\t\t\treturn result;\n\t\t\t};\n\t\t});\n\t},\n\n\t/** `greater(evaluation)` returns an array with the elements of the iterable with greater\n\tevaluation (or numerical conversion by default).\n\t*/\n\tgreater: function greater(evaluation) {\n\t\tevaluation = typeof evaluation === 'function' ? evaluation : function (x) {\n\t\t\t\treturn +x;\n\t\t\t};\n\t\tvar maxEval = -Infinity, result = [], e;\n\t\tthis.forEach(function (x) {\n\t\t\te = evaluation(x);\n\t\t\tif (maxEval < e) {\n\t\t\t\tmaxEval = e;\n\t\t\t\tresult = [x];\n\t\t\t} else if (maxEval == e) {\n\t\t\t\tresult.push(x);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t},\n\n\t/** `lesser(evaluation)` returns an array with the elements of the iterable with lesser\n\tevaluation (or numerical conversion by default).\n\t*/\n\tlesser: function lesser(evaluation) {\n\t\tevaluation = typeof evaluation === 'function' ? evaluation : function (x) {\n\t\t\t\treturn +x;\n\t\t\t};\n\t\tvar minEval = Infinity, result = [], e;\n\t\tthis.forEach(function (x) {\n\t\t\te = evaluation(x);\n\t\t\tif (minEval > e) {\n\t\t\t\tminEval = e;\n\t\t\t\tresult = [x];\n\t\t\t} else if (minEval == e) {\n\t\t\t\tresult.push(x);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t},\n\n\t/** `sample(n, random=Randomness.DEFAULT)` returns an iterable with `n` elements of this\n\titerable randomly selected. The order of the elements is maintained.\n\t*/\n\tsample: function sample(n, random) {\n\t\tn = n|0;\n\t\tif (n < 1) {\n\t\t\treturn Iterable.EMPTY;\n\t\t}\n\t\trandom = random || Randomness.DEFAULT;\n\t\tvar buffer = [];\n\t\tthis.forEach(function (x, i) {\n\t\t\tvar r = random.random();\n\t\t\tfor (var p = buffer.length; p > 0 && buffer[p-1][0] < r; --p); // Ordered insertion.\n\t\t\tbuffer.splice(p, 0, [r, x, i]);\n\t\t\twhile (buffer.length > n) {\n\t\t\t\tbuffer.pop();\n\t\t\t}\n\t\t});\n\t\tbuffer.sort(function (t1, t2) { // Order by index.\n\t\t\treturn t1[2] - t2[2];\n\t\t});\n\t\treturn new Iterable(buffer.map(function (t) { // Keep only the elements.\n\t\t\treturn t[1];\n\t\t}));\n\t},\n\n\t// ## Sequence aggregation #####################################################################\n\n\t/** `foldl(foldFunction, initial)` folds the elements of this iterable with `foldFunction` as a\n\tleft associative operator. The `initial` value is used as a starting point, but if it is not\n\tdefined, then the first element in the sequence is used.\n\t*/\n\tfoldl: function foldl(foldFunction, initial) {\n\t\tvar iter = this.__iter__(), x;\n\t\ttry {\n\t\t\tinitial = initial === undefined ? iter() : initial;\n\t\t\tfor (x = iter(); true; x = iter()) {\n\t\t\t\tinitial = foldFunction(initial, x);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.catchStop(err);\n\t\t}\n\t\treturn initial;\n\t},\n\n\t/** `scanl(foldFunction, initial)` folds the elements of this iterable with `foldFunction` as a\n\tleft associative operator. Instead of returning the last result, it iterates over the\n\tintermediate values in the folding sequence.\n\t*/\n\tscanl: function scanl(foldFunction, initial) {\n\t\tvar from = this; // for closures.\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar iter = from.__iter__(), value, count = -1;\n\t\t\treturn function __scanlIterator__() {\n\t\t\t\tcount++;\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tvalue = initial === undefined ? iter() : initial;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = foldFunction(value, iter());\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t};\n\t\t});\n\t},\n\n\t/** `foldr(foldFunction, initial)` folds the elements of this iterable with `foldFunction` as a\n\tright associative operator. The `initial` value is used as a starting point, but if it is not\n\tdefined the first element in the sequence is used.\n\n\tWarning! This is the same as doing a `foldl` in a reversed iterable.\n\t*/\n\tfoldr: function foldr(foldFunction, initial) {\n\t\tfunction flippedFoldFunction(x,y) {\n\t\t\treturn foldFunction(y,x);\n\t\t}\n\t\treturn this.reverse().foldl(flippedFoldFunction, initial);\n\t},\n\n\t/** `scanr(foldFunction, initial)` folds the elements of this iterable with `foldFunction` as a\n\tright associative operator. Instead of returning the last result, it iterates over the\n\tintermediate values in the folding sequence.\n\n\tWarning! This is the same as doing a `scanl` in a reversed iterable.\n\t*/\n\tscanr: function scanr(foldFunction, initial) {\n\t\tfunction flippedFoldFunction(x,y) {\n\t\t\treturn foldFunction(y,x);\n\t\t}\n\t\treturn this.reverse().scanl(flippedFoldFunction, initial);\n\t},\n\n\t/** `sum(n=0)` returns the sum of all elements in the sequence, or `n` if the sequence is empty.\n\t*/\n\tsum: function sum(n) {\n\t\tvar result = isNaN(n) ? 0 : +n;\n\t\tthis.forEach(function (x) {\n\t\t\tresult += (+x);\n\t\t});\n\t\treturn result;\n\t},\n\n\t/** `min(n=Infinity)` returns the minimum element of all elements in the sequence, or `Infinity`\n\tif the sequence is empty.\n\t*/\n\tmin: function min(n) {\n\t\tvar result = isNaN(n) ? Infinity : +n;\n\t\tthis.forEach(function (x) {\n\t\t\tx = (+x);\n\t\t\tif (x < result) {\n\t\t\t\tresult = x;\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t},\n\n\t/** `max(n=-Infinity)` returns the maximum element of all elements in the sequence, or\n\t`-Infinity` if the sequence is empty.\n\t*/\n\tmax: function max(n) {\n\t\tvar result = isNaN(n) ? -Infinity : +n;\n\t\tthis.forEach(function (x) {\n\t\t\tx = (+x);\n\t\t\tif (x > result) {\n\t\t\t\tresult = x;\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t},\n\n\t/** `all(predicate, strict=false)` returns true if for all elements in the sequence `predicate`\n\treturns true, or if the sequence is empty.\n\t*/\n\tall: function all(predicate, strict) {\n\t\tpredicate = typeof predicate === 'function' ? predicate : function (x) { return !!x; };\n\t\tvar result = true;\n\t\tthis.forEach(function (x, i) {\n\t\t\tif (!predicate(x, i)) {\n\t\t\t\tresult = false;\n\t\t\t\tif (!strict) {\n\t\t\t\t\tthrow STOP_ITERATION; // Shortcircuit.\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t},\n\n\t/** `any(predicate, strict=false)` returns false if for all elements in the sequence `predicate`\n\treturns false, or if the sequence is empty.\n\t*/\n\tany: function any(predicate, strict) {\n\t\tpredicate = typeof predicate === 'function' ? predicate : function (x) { return !!x; };\n\t\tvar result = false;\n\t\tthis.forEach(function (x, i) {\n\t\t\tif (predicate(x, i)) {\n\t\t\t\tresult = true;\n\t\t\t\tif (!strict) {\n\t\t\t\t\tthrow STOP_ITERATION; // Shortcut.\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t},\n\n\t/** `join(sep='')` concatenates all strings in the sequence using `sep` as separator. If `sep`\n\tis not given, '' is assumed.\n\t*/\n\tjoin: function join(sep) {\n\t\tvar result = '';\n\t\tsep = ''+ (sep || '');\n\t\tthis.forEach(function (x, i) {\n\t\t\tresult += (i === 0) ? x : sep + x;\n\t\t});\n\t\treturn result;\n\t},\n\n\t// ## Sequence conversions #####################################################################\n\n\t/** `toArray(array=[])`: appends to `array` the elements of the sequence and returns it. If no\n\tarray is given, a new one is used.\n\t*/\n\ttoArray: function toArray(array) {\n\t\tarray = array || [];\n\t\tthis.forEach(function (x) {\n\t\t\tarray.push(x);\n\t\t});\n\t\treturn array;\n\t},\n\n\t/** `toObject(obj={})` takes an iterable of 2 element arrays and assigns to the given object (or\n\ta new one by default) each key-value pairs as a property.\n\t*/\n\ttoObject: function toObject(obj) {\n\t\tobj = obj || {};\n\t\tthis.forEach(function (x) {\n\t\t\tobj[x[0]] = x[1];\n\t\t});\n\t\treturn obj;\n\t},\n\n\t// ## Whole sequence operations ################################################################\n\n\t/** `reverse()` returns an iterable with this iterable elements in reverse order.\n\n\tWarning! It stores all this iterable's elements in memory.\n\t*/\n\treverse: function reverse() {\n\t\treturn new Iterable(this.toArray().reverse());\n\t},\n\n\t/** `sorted(sortFunction)` returns an iterable that goes through this iterable's elements in\n\torder.\n\n\tWarning! This iterable's elements are stored in memory for sorting.\n\t*/\n\tsorted: function sorted(sortFunction) {\n\t\treturn new Iterable(this.toArray().sort(sortFunction));\n\t},\n\n\t/** `permutations(k)` returns an iterable that runs over the permutations of `k` elements of\n\tthis iterable. Permutations are not generated in any particular order.\n\n\tWarning! It stores all this iterable's elements in memory.\n\t*/\n\tpermutations: function permutations(k) {\n\t\tk = k|0;\n\t\tvar pool = this.toArray(),\n\t\t\tn = pool.length;\n\t\tif (k < 1 || k > n) {\n\t\t\treturn Iterable.EMPTY;\n\t\t} else {\n\t\t\tvar count = math.factorial(n) / math.factorial(n - k);\n\t\t\treturn new Iterable(function () {\n\t\t\t\tvar current = 0,\n\t\t\t\t\tindices = Iterable.range(n).toArray();\n\t\t\t\treturn function __permutationsIterator__() {\n\t\t\t\t\tif (current < count) {\n\t\t\t\t\t\tvar result = new Array(k),\n\t\t\t\t\t\t\tis = indices.slice(), // copy indices array.\n\t\t\t\t\t\t\ti = current;\n\t\t\t\t\t\tfor (var p = 0; p < k; ++p) {\n\t\t\t\t\t\t\tresult[p] = pool[is.splice(i % (n - p), 1)[0]];\n\t\t\t\t\t\t\ti = (i / (n - p)) |0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t++current;\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow STOP_ITERATION;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t},\n\n\t/** `combinations(k)` returns an iterable that runs over the combinations of `k` elements of\n\tthis iterable. Combinations are generated in lexicographical order. The implementations is\n\tinspired in [Python's itertools](https://docs.python.org/3/library/itertools.html#itertools.combinations).\n\n\tWarning! It stores all this iterable's elements in memory.\n\t*/\n\tcombinations: function combinations(k) {\n\t\tk = k|0;\n\t\tvar pool = this.toArray(),\n\t\t\tn = pool.length;\n\t\tif (k < 1 || k > n) {\n\t\t\treturn Iterable.EMPTY;\n\t\t} else {\n\t\t\treturn new Iterable(function () {\n\t\t\t\tvar indices = Iterable.range(k).toArray(),\n\t\t\t\t\tcurrent = indices.map(function (i) { return pool[i]; });\n\t\t\t\treturn function __combinationsIterator__() {\n\t\t\t\t\tif (!current) throw STOP_ITERATION;\n\t\t\t\t\tvar result = current;\n\t\t\t\t\tfor (var i = k-1; i >= 0; --i) {\n\t\t\t\t\t\tif (indices[i] !== i + n - k) break;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < 0) {\n\t\t\t\t\t\tcurrent = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindices[i] += 1;\n\t\t\t\t\t\tfor (var j = i+1; j < k; ++j) {\n\t\t\t\t\t\t\tindices[j] = indices[j-1] + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrent = indices.map(function (i) { return pool[i]; });\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t},\n\n\t/** `slices(size=1)` builds another iterable that enumerates arrays of the given size of\n\telements of this iterable.\n\t*/\n\tslices: function slices(size) {\n\t\tvar _this = this;\n\t\tsize = isNaN(size) || size < 1 ? 1 : size|0;\n\t\treturn new Iterable(function __iter__(){\n\t\t\tvar it = _this.__iter__(), slice;\n\t\t\treturn function __sliceIterator__() {\n\t\t\t\tslice = [];\n\t\t\t\ttry {\n\t\t\t\t\tfor (var i = 0; i < size; ++i) {\n\t\t\t\t\t\tslice.push(it());\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (err !== STOP_ITERATION) {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (slice.length > 0) {\n\t\t\t\t\treturn slice;\n\t\t\t\t} else {\n\t\t\t\t\tthrow STOP_ITERATION;\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n\n\t/** `groupBy(key)` returns an iterable that runs over the subsequent elements of this iterable\n\tthat when applied the `key` function return the same value. If no `key` function is given, the\n\tactual values are used. Each element in the grouped iterable is a pair, with the key value first\n\tand an array second.\n\t*/\n\tgroupBy: function groupBy(key) {\n\t\tvar it = this;\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar iter = it.__iter__(),\n\t\t\t\ti = 0,\n\t\t\t\tcurrentValues = null,\n\t\t\t\tcurrentKey;\n\t\t\ttry {\n\t\t\t\tcurrentValues = [iter()];\n\t\t\t\tcurrentKey = key ? key(currentValues[0], i++) : currentValues[0];\n\t\t\t} catch (err) {\n\t\t\t\tit.catchStop(err);\n\t\t\t}\n\t\t\treturn function __groupByIterator__() {\n\t\t\t\tvar value, valueKey, pair;\n\t\t\t\tif (!currentValues) {\n\t\t\t\t\tit.stop();\n\t\t\t\t} else while (true) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = iter();\n\t\t\t\t\t\tvalueKey = key ? key(value, i++) : value;\n\t\t\t\t\t\tif (valueKey === currentKey) {\n\t\t\t\t\t\t\tcurrentValues.push(value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpair = [currentKey, currentValues];\n\t\t\t\t\t\t\tcurrentKey = valueKey;\n\t\t\t\t\t\t\tcurrentValues = [value];\n\t\t\t\t\t\t\treturn pair;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tit.catchStop(err);\n\t\t\t\t\t\tpair = [currentKey, currentValues];\n\t\t\t\t\t\tcurrentValues = null;\n\t\t\t\t\t\treturn pair;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n\n\t/** `groupAll(key, accum)` returns an object with one member per group of elements. The\n\telements' keys are calculated by the `key` function, or the default string conversion by\n\tdefault. If a `accum` function is given, it is used to accumulate the groups. By default an\n\tarray is built.\n\t*/\n\tgroupAll: (function () {\n\t\tfunction DEFAULT_KEY(x) {\n\t\t\treturn x +'';\n\t\t}\n\t\tfunction DEFAULT_ACCUM(xs, x) {\n\t\t\txs = xs || [];\n\t\t\txs.push(x);\n\t\t\treturn xs;\n\t\t}\n\t\treturn function groupAll(key, accum) {\n\t\t\tvar result = {};\n\t\t\tkey = key || DEFAULT_KEY;\n\t\t\taccum = accum || DEFAULT_ACCUM;\n\t\t\tthis.forEach(function (elem, i) {\n\t\t\t\tvar k = key(elem, i);\n\t\t\t\tresult[k] = accum(result[k], elem, i);\n\t\t\t});\n\t\t\treturn result;\n\t\t};\n\t})(),\n\n\t// ## Operations on many sequences #############################################################\n\n\t/** `zip(iterables...)` builds an iterable that iterates over this and all the given iterables\n\tat the same time, yielding an array of the values of each and stopping at the first sequence\n\tfinishing.\n\t*/\n\t'static zipWith': function zipWith(f) {\n\t\tvar its = Array.prototype.slice.call(arguments, 1).map(iterable);\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar iterators = its.map(function (it) {\n\t\t\t\treturn it.__iter__();\n\t\t\t});\n\t\t\treturn function __zipIterator__() {\n\t\t\t\tvar r = iterators.map(function (iterator) {\n\t\t\t\t\treturn iterator();\n\t\t\t\t});\n\t\t\t\treturn f ? f.apply(null, r) : r;\n\t\t\t};\n\t\t});\n\t},\n\n\tzipWith: function zipWith(f) {\n\t\tvar args = [f, this].concat(Array.prototype.slice.call(arguments, 1));\n\t\treturn this.constructor.zipWith.apply(this.constructor, args);\n\t},\n\n\t'static zip': function zip() {\n\t\tvar args = [null].concat(Array.prototype.slice.call(arguments));\n\t\treturn this.zipWith.apply(this, args);\n\t},\n\n\tzip: function zip() {\n\t\tvar args = [null, this].concat(Array.prototype.slice.call(arguments));\n\t\treturn this.constructor.zipWith.apply(this.constructor, args);\n\t},\n\n\t/** `product(iterables...)` builds an iterable that iterates over the\n\t[cartesian product](http://en.wikipedia.org/wiki/Cartesian_product) of this and all the given\n\titerables, yielding an array of the values of each.\n\t*/\n\tproduct: function product() {\n\t\tvar its = Array.prototype.slice.call(arguments).map(iterable);\n\t\tits.unshift(this);\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar iterators, tuple;\n\t\t\treturn function __productIterator__() {\n\t\t\t\tif (!iterators) { // First tuple.\n\t\t\t\t\titerators = its.map(function (it) {\n\t\t\t\t\t\treturn it.__iter__();\n\t\t\t\t\t});\n\t\t\t\t\ttuple = iterators.map(function (iter) {\n\t\t\t\t\t\treturn iter(); // If STOP_ITERATION is raised, it should not be catched.\n\t\t\t\t\t});\n\t\t\t\t} else if (!tuple) { // Sequence has ended.\n\t\t\t\t\tthrow STOP_ITERATION;\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = iterators.length - 1; i >= 0; --i) { // Subsequent tuples.\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\ttuple[i] = iterators[i]();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tif (i > 0 && err === STOP_ITERATION) {\n\t\t\t\t\t\t\t\titerators[i] = its[i].__iter__();\n\t\t\t\t\t\t\t\ttuple[i] = iterators[i]();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttuple = null; // So subsequent calls while still throw STOP_ITERATION.\n\t\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn tuple.slice(0); // Shallow array clone.\n\t\t\t};\n\t\t});\n\t},\n\n\t'static product': function (it) {\n\t\tit = it ? iterable(it) : this.EMPTY;\n\t\treturn this.prototype.product.apply(it, Array.prototype.slice.call(arguments, 1));\n\t},\n\n\t/** `chain(iterables...)` returns an iterable that iterates over the concatenation of this and\n\tall the given iterables.\n\t*/\n\tchain: function chain() {\n\t\tvar its = Array.prototype.slice.call(arguments).map(iterable);\n\t\tits.unshift(this);\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar i = 0, iterator = its[0].__iter__();\n\t\t\treturn function __chainIterator__() {\n\t\t\t\twhile (true) try {\n\t\t\t\t\treturn iterator();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (err === STOP_ITERATION && i + 1 < its.length) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\titerator = its[i].__iter__();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow err; // Rethrow if not STOP_ITERATION or there aren't more iterables.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow STOP_ITERATION;\n\t\t\t};\n\t\t});\n\t},\n\n\t'static chain': function (it) {\n\t\tit = it ? iterable(it) : this.EMPTY;\n\t\treturn this.prototype.chain.apply(it, Array.prototype.slice.call(arguments, 1));\n\t},\n\n\t/** `flatten()` chains all the iterables in the elements of this iterable.\n\t*/\n\tflatten: function flatten() {\n\t\tvar self = this;\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar it = self.__iter__(),\n\t\t\t\titerator = this.stop;\n\t\t\treturn function __flattenIterator__() {\n\t\t\t\twhile (true) try {\n\t\t\t\t\treturn iterator();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (err === STOP_ITERATION) {\n\t\t\t\t\t\titerator = iterable(it()).__iter__();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow STOP_ITERATION;\n\t\t\t};\n\t\t});\n\t},\n\n\t// ## Set related ##############################################################################\n\n\t/** The `nub` of a sequence is another sequence with each element only appearing once. Basically\n\trepeated elements are removed. The argument `comp` may have a function to compare the sequence's\n\tvalues.\n\n\tWarning! All the elements of the result are stored in memory.\n\t*/\n\tnub: function nub(comp) {\n\t\tvar buffer = [];\n\t\treturn this.filter(function (x) {\n\t\t\tif (comp) {\n\t\t\t\tfor (var i = buffer.length-1; i >= 0; --i) {\n\t\t\t\t\tif (comp(buffer[i], x)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (buffer.indexOf(x) >= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbuffer.push(x);\n\t\t\treturn true;\n\t\t});\n\t},\n\n\t/** The `union(iterable...)` and `unionBy(comp, iterable...)` methods treat this and each\n\titerable argument as sets, and calculate the union of all. `unionBy` allows to define a specific\n\tequality criteria between the elements.\n\n\tWarning! All the elements of the result are stored in memory.\n\t*/\n\tunion: function union() {\n\t\tvar args = [void 0].concat(Array.prototype.slice.call(arguments));\n\t\treturn this.unionBy.apply(this, args);\n\t},\n\n\tunionBy: function unionBy(comp) {\n\t\treturn this.chain.apply(this, Array.prototype.slice.call(arguments, 1)).nub(comp);\n\t},\n\n\t/** The `intersection(iterable...)` and `intersectionBy(comp, iterable...)` methods intersection\n\tof the iterable arguments with `this`. This iterable is assumed not to have repeated elements.\n\t`intersectionBy` allows to define a specific equality criteria between the elements.\n\n\tWarning! All the elements of the result are stored in memory.\n\t*/\n\tintersection: function intersection() {\n\t\tvar args = [void 0].concat(Array.prototype.slice.call(arguments));\n\t\treturn this.intersectionBy.apply(this, args);\n\t},\n\n\tintersectionBy: function intersectionBy(comp) {\n\t\tvar buffer = this.toArray();\n\t\tfor (var i = 1; i < arguments.length; ++i) {\n\t\t\tbuffer = iterable(arguments[i]).filter(function (x) {\n\t\t\t\tif (comp) {\n\t\t\t\t\tfor (var i = buffer.length-1; i >= 0; --i) {\n\t\t\t\t\t\tif (comp(buffer[i], x)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn buffer.indexOf(x) >= 0;\n\t\t\t\t}\n\t\t\t}).toArray();\n\t\t}\n\t\treturn iterable(buffer);\n\t},\n\n\t/** The `difference(iterable...)` and `differenceBy(comp, iterable...)` methods difference of\n\tthe iterable arguments with `this`. This iterable is assumed not to have repeated elements.\n\t`differenceBy` allows to define a specific equality criteria between the elements.\n\n\tWarning! All the elements of given sequences are stored in memory.\n\t*/\n\tdifference: function difference() {\n\t\tvar args = [void 0].concat(Array.prototype.slice.call(arguments));\n\t\treturn this.differenceBy.apply(this, args);\n\t},\n\n\tdifferenceBy: function differenceBy(comp) {\n\t\tvar result = this,\n\t\t\tbuffer;\n\t\tfor (var i = 1; i < arguments.length; ++i) {\n\t\t\tbuffer = iterable(arguments[i]).toArray();\n\t\t\tresult = result.filter(function (x) {\n\t\t\t\tif (comp) {\n\t\t\t\t\tfor (var i = buffer.length-1; i >= 0; --i) {\n\t\t\t\t\t\tif (comp(buffer[i], x)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn buffer.indexOf(x) < 0;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t},\n\n\t// ## Sequence builders ########################################################################\n\n\t/** `range(from=0, to, step=1)` builds an Iterable object with number from `from` upto `to` with\n\tthe given `step`. For example, `range(2,12,3)` represents the sequence `[2, 5, 8, 11]`.\n\t*/\n\t\"static range\": function range(from, to, step) {\n\t\tswitch (arguments.length) {\n\t\t\tcase 0: from = 0; to = 0; step = 1; break;\n\t\t\tcase 1: to = from; from = 0; step = 1; break;\n\t\t\tcase 2: step = 1; break;\n\t\t}\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar i = from, r;\n\t\t\treturn function __rangeIterator__() {\n\t\t\t\tif (isNaN(i) || isNaN(to) || i >= to) {\n\t\t\t\t\tthrow STOP_ITERATION;\n\t\t\t\t} else {\n\t\t\t\t\tr = i;\n\t\t\t\t\ti = i + step;\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n\n\t/** `repeat(x, n=Infinity)` builds an iterable that repeats the element `x`\t`n` times (or\n\tforever by default).\n\t*/\n\t\"static repeat\": function repeat(x, n) {\n\t\tn = isNaN(n) ? Infinity : +n;\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar i = n;\n\t\t\treturn function __repeatIterator__() {\n\t\t\t\ti--;\n\t\t\t\tif (i < 0) {\n\t\t\t\t\tthrow STOP_ITERATION;\n\t\t\t\t} else {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n\n\t/** `iterate(f, x, n=Infinity)` returns an iterable that repeatedly applies the function `f` to\n\tthe value `x`, `n` times (or indefinitely by default).\n\t*/\n\t\"static iterate\": function iterate(f, x, n) {\n\t\tn = isNaN(n) ? Infinity : +n;\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar i = n, value = x;\n\t\t\treturn function __iterateIterator__() {\n\t\t\t\ti--;\n\t\t\t\tif (i < 0) {\n\t\t\t\t\tthrow STOP_ITERATION;\n\t\t\t\t} else {\n\t\t\t\t\tvar result = value;\n\t\t\t\t\tvalue = f(value);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n\n\t/** `cycle(n=Infinity)` returns an iterable that loops n times over the elements of this\n\t`Iterable` (or forever by default).\n\t*/\n\tcycle: function cycle(n) {\n\t\tn = n === undefined ? Infinity : (+n);\n\t\tvar iterable = this;\n\t\treturn new Iterable(function __iter__() {\n\t\t\tvar i = n, iter = iterable.__iter__();\n\t\t\treturn function __cycleIterator__() {\n\t\t\t\twhile (i > 0) try {\n\t\t\t\t\treturn iter();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (err === STOP_ITERATION && i > 1) {\n\t\t\t\t\t\ti--;\n\t\t\t\t\t\titer = iterable.__iter__();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow STOP_ITERATION; // In case n < 1.\n\t\t\t};\n\t\t});\n\t},\n\n\t// ## Utility definitions. #####################################################################\n\n\t/** The string conversion of an iterable (`toString(n=5)`) returns a string with the first `n`\n\telements. It ends with `...` if there are more elements in the sequence.\n\t*/\n\ttoString: function toString(n) {\n\t\tn = (n|0) || 5;\n\t\tvar elems = this.take(n + 1).toArray();\n\t\tif (elems.length > n) {\n\t\t\telems.pop();\n\t\t\treturn \"Iterable(\"+ JSON.stringify(elems).replace(/\\]$/, \" ...]\") +\")\";\n\t\t} else {\n\t\t\treturn \"Iterable(\"+ JSON.stringify(elems) +\")\";\n\t\t}\n\t}\n}); //// declare Iterable.\n\n/** `Iterable.EMPTY` is a singleton holding an empty iterable.\n*/\nIterable.EMPTY = new Iterable(function () {\n\treturn Iterable.prototype.stop;\n});\n\n/** `iterable(obj)` returns an iterable, either if `obj` is already one or builds one from it.\n*/\nvar iterable = exports.iterable = function iterable(obj) {\n\treturn typeof obj !== 'undefined' && obj !== null && typeof obj.__iter__ === 'function' ? obj : new Iterable(obj);\n};\n","/** # Future \n\nAn implementation of [futures](http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Future.html),\nalso known as [promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\nor [deferreds](http://api.jquery.com/category/deferred-object/). These are constructions oriented to \nsimplify the interaction between parallel threads. \n\nA [future](http://en.wikipedia.org/wiki/Futures_and_promises) represents a value that is being \ncalculated asynchronously. Callbacks are registered for when the value becomes available or an error\nraised.\n*/\nvar Future = exports.Future = declare({\n\t/** The constructor builds a resolved future if a value is given, else it builds a pending \n\tfuture.\n\t*/\n\tconstructor: function Future(value) {\n\t\tthis.state = 0;\n\t\tthis.callbacks = [[],[],[]];\n\t\tif (arguments.length > 0) {\n\t\t\tthis.resolve(value);\n\t\t}\n\t},\n\n\t/** The method `__future__` is used to get a future from an object. Many methods of `Future` \n\tthat deal with object that may or may not be futures use this to solve the ambiguity. In this \n\tcase it returns this object, but other objects may implement it in other ways.\n\t*/\n\t__future__: function __future__() {\n\t\treturn this;\n\t},\n\t\n\t'static __isFuture__': function __isFuture__(obj) {\n\t\treturn typeof obj !== 'undefined' && obj !== null && typeof obj.__future__ === 'function';\n\t},\n\t\n\t// ## State ####################################################################################\n\t\n\t/** A future may be in any of 4 states:\n\t\n\t+ 0 or `pending` means that the asynchronous process this future represents has not finished.\n\t\t\n\t+ 1 or `resolved` means that the asynchronous process this future represents has finished \n\tsuccessfully.\n\t\t\n\t+ 2 or `rejected` means that the asynchronous process this future represents has finished \n\tunsuccessfully.\n\t\t\n\t+ 3 or `cancelled` means that the asynchronous process this future represents was aborted.\n\t*/\n\tSTATES: ['pending', 'resolved', 'rejected', 'cancelled'],\n\t\n\tisPending: function isPending() {\n\t\treturn this.state === 0;\n\t},\n\n\tisResolved: function isResolved() {\n\t\treturn this.state === 1;\n\t},\n\n\tisRejected: function isRejected() {\n\t\treturn this.state === 2;\n\t},\n\n\tisCancelled: function isCancelled() {\n\t\treturn this.state === 3;\n\t},\n\t\n\t/** When a future is completed (either resolved or rejected) all the corresponding callbacks are\n\tcalled asynchronously with the given context and value.\n\t\n\tA future may not be completed more than once. Repeated calls to completion methods are ignored.\n\t*/\n\t__complete__: function __complete__(context, value, state) {\n\t\tvar future = this;\n\t\tif (this.state === 0) {\n\t\t\tthis.state = state;\n\t\t\tthis.__completion__ = [context, value];\n\t\t\tthis.callbacks[state - 1].forEach(function (callback) {\n\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\tsetTimeout(callback.bind(context, value), 1);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this; // for chaining.\n\t},\n\n\t/** `resolve(value, context=this)` completes the future as `resolved`. This method should be \n\tcalled by the producer when its process is finished successfully.\n\t*/\n\tresolve: function resolve(value, context) {\n\t\treturn this.state === 0 ? this.__complete__(context || this, value, 1) : this;\n\t},\n\n\t/** `reject(reason, context=this)` completes the future as `rejected`. This method should be \n\tcalled by the producer thread when its process is aborted with an error.\n\t\n\tIf there aren't any `onRejected` callbacks registered, an `Error` is raised. This can be \n\t`reason` (if it is already an `Error` instance) or a new `Error` with `reason` as its message.\n\t*/\n\treject: function reject(reason, context) {\n\t\tif (this.state === 0) {\n\t\t\tthis.__complete__(context || this, reason, 2);\n\t\t\tif (this.callbacks[1].length < 1) {\n\t\t\t\tif (reason instanceof Error) {\n\t\t\t\t\tthrow reason;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(reason);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\t/** `cancel(reason)` completes the future as `cancelled`, disregarding all callbacks. This \n\tmethod may be called by either the producer or the consumer.\n\t*/\t\n\tcancel: function cancel(reason) {\n\t\treturn this.state === 0 ? this.__complete__(this, reason, 3) : this;\n\t},\n\n\ttoString: function toString() {\n\t\treturn 'Future:'+ this.STATES[this.state];\n\t},\n\t\n\t// ## Callbacks ################################################################################\n\t\n\t/** For a future to have some use, callback functions are registered to be called when it is \n\tcompleted. Callbacks registered after the future's completion are called right away if the state \n\tmatches, or ignored otherwise.\n\t*/\n\t__register__: function __register__(callback, state) {\n\t\tif (typeof callback === 'function') {\n\t\t\tif (this.state === 0) { // If future is pending...\n\t\t\t\tthis.callbacks[state - 1].push(callback);\n\t\t\t} else if (this.state === state) {\n\t\t\t\tsetTimeout(callback.bind(this.__completion__[0], this.__completion__[1]), 1);\n\t\t\t}\n\t\t\treturn this;\n\t\t} else {\n\t\t\tthrow new Error(\"Callback must be a function, and not (\"+ callback +\")!\");\n\t\t}\n\t},\n\n\t/** `done(callback...)` registers one or more callbacks to be called if this future gets \n\tresolved.\n\t*/\n\tdone: function done() {\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tthis.__register__(arguments[i], 1);\n\t\t}\n\t\treturn this;\n\t},\n\n\t/** `fail(callback...)` registers one or more callbacks to be called if this future gets \n\trejected.\n\t*/\n\tfail: function fail() {\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tthis.__register__(arguments[i], 2);\n\t\t}\n\t\treturn this;\n\t},\n\n\t/** `__onCancel__(callback...)` registers one or more callbacks to be called if this future gets\n\tcancelled. This is unusual, yet provided for testing purposes.\n\t*/\n\t__onCancel__: function __onCancel__() {\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tthis.__register__(arguments[i], 3);\n\t\t}\n\t\treturn this;\n\t},\n\n\t/** `always(callback...)` registers one or more callbacks to be called if this future gets \n\teither resolved or rejected.\n\t*/\n\talways: function always() {\n\t\treturn this.done.apply(this, arguments).fail.apply(this, arguments);\n\t},\n\n\t/** Binding one future to another ties the completion of the second one to the completion of the\n\tfirst one.\n\t*/\n\tbind: function bind(future) {\n\t\tfuture.done(this.resolve.bind(this));\n\t\tfuture.fail(this.reject.bind(this));\n\t\tfuture.__onCancel__(this.cancel.bind(this));\n\t\treturn this;\n\t},\n\n\t/** `then(onResolved, onRejected)` is probably the most used function of promises. It represents\n\ta kind of asynchronous sequence operation, returning a new future which is resolved when this \n\tfuture is resolved, and rejected in the same way. \n\t\n\tThe given callbacks are used to calculate a new value to either resolution or rejection of the \n\tnew future object, and they themselves may be asynchronous returning futures.\n\t*/\n\tthen: function then(onResolved, onRejected) {\n\t\tvar result = new Future();\n\t\tthis.done(function (value) {\n\t\t\tvar futureValue;\n\t\t\ttry {\n\t\t\t\tvalue = onResolved ? onResolved(value) : value;\n\t\t\t\tif (__isFuture__(value)) {\n\t\t\t\t\tresult.bind(value.__future__());\n\t\t\t\t} else {\n\t\t\t\t\tresult.resolve(value);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tresult.reject(err);\n\t\t\t}\t\t\t\n\t\t});\n\t\tthis.fail(function (reason) {\n\t\t\tif (!onRejected) {\n\t\t\t\tresult.reject(reason);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\treason = onRejected(reason);\n\t\t\t\t\tif (__isFuture__(reason)) {\n\t\t\t\t\t\tresult.bind(reason.__future__());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.resolve(reason);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tresult.reject(err);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.__onCancel__(result.cancel.bind(result));\n\t\treturn result;\n\t},\n\t\n\t// ## Functions dealing with futures ###########################################################\n\n\t/** `when(value)` unifies asynchronous and synchronous behaviours. If `value` is a future it is\n\treturned as it is. Else a new future is returned resolved with the given value.\n\t*/\n\t'static when': function when(value) {\n\t\treturn __isFuture__(value) ? value.__future__() : new Future(value);\n\t},\n\n\t/** The static version of `then(value, onResolved, onRejected)` is another way of unifying \n\tasynchronous and synchronous behaviours. If `value` is a future, it behaves like the instance \n\t`then()`. Else it calls `onResolved` with the given value. \n\t\n\tThe main difference with using `Future.when()` is that if value is not a future, the result may \n\tnot be a future neither. This may be useful for avoiding asynchronism overhead when synchronism \n\tis more probable.\n\t*/\n\t'static then': function then(value, onResolved, onRejected) {\n\t\treturn __isFuture__(value) ? value.__future__().then(onResolved, onRejected) : onResolved(value);\n\t},\n\t\n\t/** `invoke(fn, _this, args...)` calls the function synchronously, returning a future resolved \n\twith the call's result. If an exceptions is raised, the future is rejected with it.\n\t*/\n\t'static invoke': function invoke(fn, _this) {\n\t\ttry {\n\t\t\treturn when(fn.apply(_this, Array.prototype.slice.call(arguments, 2)));\n\t\t} catch (error) {\n\t\t\tvar result = new Future();\n\t\t\tresult.reject(error);\n\t\t\treturn result;\n\t\t}\n\t},\n\n\t/** `all(futures)` builds a future that is resolved if all the given futures get resolved, or \n\trejected if one gets rejected. If no futures are given, the result is resolved with [].\n\t*/\n\t'static all': function all(futures) {\n\t\tfutures = Array.isArray(futures) ? futures : iterable(futures).toArray();\n\t\tvar result = new Future(),\n\t\t\tcount = futures.length,\n\t\t\tvalues = new Array(count), future,\n\t\t\tdoneCallback = function (index, value) {\n\t\t\t\tvalues[index] = value;\n\t\t\t\tif (--count < 1) {\n\t\t\t\t\tresult.resolve(values);\n\t\t\t\t}\n\t\t\t};\n\t\tif (count < 1) {\n\t\t\tresult.resolve([]);\n\t\t} else for (var i = 0; i < futures.length; i++) {\n\t\t\tfuture = when(futures[i]);\n\t\t\tfuture.done(doneCallback.bind(this, i));\n\t\t\tfuture.fail(result.reject.bind(result));\n\t\t\tfuture.__onCancel__(result.cancel.bind(result));\n\t\t}\n\t\treturn result;\n\t},\n\n\t/** `any(futures)` builds a future that is resolved if any of the given futures are resolved, or\n\trejected if all are rejected. If no futures are given, the result is rejected with undefined.\n\t*/\n\t'static any': function any(futures) {\n\t\tfutures = iterables.iterable(futures).toArray();\n\t\tvar result = new Future(), \n\t\t\tcount = futures.length,\n\t\t\tvalues = new Array(count), future;\n\t\tif (count < 1) {\n\t\t\tresult.reject();\n\t\t} else for (var i = 0; i < futures.length; i++) {\n\t\t\tfuture = when(futures[i]);\n\t\t\tfuture.fail((function (index) {\n\t\t\t\treturn function (value) {\n\t\t\t\t\tvalues[index] = value;\n\t\t\t\t\tcount--;\n\t\t\t\t\tif (count < 1) {\n\t\t\t\t\t\tresult.reject(value);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t})(i));\n\t\t\tfuture.done(result.resolve.bind(result));\n\t\t\tfuture.__onCancel__(result.cancel.bind(result));\n\t\t}\n\t\treturn result;\n\t},\n\n\t/** `sequence(xs, f=None)` evaluates all values and futures in the iterable `xs` in sequence. If\n\tdefined, the function f is called for each value.\n\t*/\n\t'static sequence': function sequence(xs, f) {\n\t\tvar result = new Future(), x,\n\t\t\trejection = result.reject.bind(result),\n\t\t\tit = iterable(xs).__iter__(),\n\t\t\taction = function action(lastValue) {\n\t\t\t\ttry {\n\t\t\t\t\tx = it();\n\t\t\t\t\tif (f) {\n\t\t\t\t\t\treturn when(x).then(f, rejection).then(action, rejection);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn when(x).then(action, rejection);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (err === STOP_ITERATION) {\n\t\t\t\t\t\tresult.resolve(lastValue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.reject(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\taction();\n\t\treturn result;\n\t},\n\n\t/** `doWhile(action, condition)` performs the action until the condition fails. The action is \n\tfirst called without arguments, and afterwards it is called with the previous value. The \n\tcondition is always called with the last value returned by action.\n\t\t\n\tBoth action and condition may return futures. The condition by default is the boolean conversion\n\tof the action's returned value.\n\t*/\n\t'static doWhile': function doWhile(action, condition) {\n\t\tcondition = condition || function (value) {\n\t\t\treturn !!value;\n\t\t};\n\t\tvar loopEnd = new Future(),\n\t\t\treject = loopEnd.reject.bind(loopEnd);\n\t\tfunction loop(value) {\n\t\t\tFuture.invoke(condition, null, value).then(function (checks) {\n\t\t\t\tif (checks) {\n\t\t\t\t\tFuture.invoke(action, null, value).then(loop, reject);\n\t\t\t\t} else {\n\t\t\t\t\tloopEnd.resolve(value);\n\t\t\t\t}\n\t\t\t}, reject);\n\t\t}\n\t\tFuture.invoke(action).then(loop, reject);\n\t\treturn loopEnd;\n\t},\n\n\t/** `whileDo(condition, action)` is similar to `doWhile`, but evaluates the condition first with\n\tno arguments.\n\t*/\n\t'static whileDo': function whileDo(condition, action) {\n\t\treturn Future.invoke(condition).then(function (checks) {\n\t\t\treturn Future.doWhile(action, condition);\n\t\t});\n\t},\n\n\t/** `delay(ms, value)` return a future that will be resolved with the given value after the \n\tgiven time in milliseconds. Time is forced to be at least 10ms. If value is undefined, the \n\ttimestamp when the function is called is used.\n\t*/\n\t'static delay': function delay(ms, value) {\n\t\tms = isNaN(ms) ? 10 : Math.max(+ms, 10);\n\t\tvalue = typeof value === 'undefined' ? Date.now() : value;\n\t\tvar result = new Future();\n\t\tsetTimeout(result.resolve.bind(result, value), ms);\n\t\treturn result;\n\t},\n\n\t/** `retrying(f, t=10, delay=100ms, delayFactor=2, maxDelay=5min)` calls the function `f` upto \n\t`t` times until it returns a value or a future that is resolved. Each time is separated by a \n\t`delay` that gets increased by `delayFactor` upto `maxDelay`.\n\t\n\tThis function is meant to simplify the implementation of retry schemes, e.g. AJAX calls.\n\t*/\n\t'static retrying': function retrying(f, times, delay, delayFactor, maxDelay) {\n\t\ttimes = isNaN(times) ? 10 : +times;\n\t\treturn times < 1 ? Future.invoke(f) : Future.invoke(f).then(undefined, function () {\n\t\t\tdelay = isNaN(delay) ? 100 : +delay;\n\t\t\tdelayFactor = isNaN(delayFactor) ? 2.0 : +delayFactor;\n\t\t\tmaxDelay = isNaN(maxDelay) ? 300000 : +maxDelay;\n\t\t\treturn Future.delay(delay).then(function () {\n\t\t\t\treturn Future.retrying(f, times - 1, Math.min(maxDelay, delay * delayFactor), delayFactor, maxDelay);\n\t\t\t});\n\t\t});\n\t},\n\n\t/** `imports(...modules)` returns a future that loads the given modules using \n\t[RequireJS'](http://requirejs.org/) `require` function, and resolves to an array of the loaded \n\tmodules.\n\t*/\n\t'static imports': function imports() {\n\t\tvar result = new Future();\n\t\trequire(Array.prototype.slice.call(arguments), function () {\n\t\t\tresult.resolve(Array.prototype.slice.call(arguments));\n\t\t}, function (err) {\n\t\t\tresult.reject(err);\n\t\t});\n\t\treturn result;\n\t}\n}); // declare Future.\n\nvar when = Future.when,\n\t__isFuture__ = Future.__isFuture__;","/** # HttpRequest\n\nA wrapper of XMLHttpRequest, adding some functionality and dealing with\tasynchronism \nwith futures.\n*/\nvar HttpRequest = exports.HttpRequest = declare({ \n\tconstructor: function HttpRequest() {\n\t\tthis.__request__ = new XMLHttpRequest();\n\t},\n\t\n\t/** `request(method, url, content, headers, user, password)` opens the \n\trequest with the given method at the given url, sends the contents and \n\treturns a future that gets resolved when the request is responded.\n\t*/\n\trequest: function request(method, url, content, headers, user, password) {\n\t\tvar xhr = this.__request__,\n\t\t\tfuture = new Future();\n\t\txhr.open(method, url, true, user, password); // Always asynchronously.\n\t\tif (headers) {\n\t\t\tObject.getOwnPropertyNames(headers).forEach(function (id) {\n\t\t\t\txhr.setRequestHeader(id, headers[id]);\n\t\t\t});\n\t\t}\n\t\txhr.onreadystatechange = function () { // See <http://www.w3schools.com/ajax/ajax_xmlhttprequest_onreadystatechange.asp>.\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status == 200) {\n\t\t\t\t\tfuture.resolve(xhr);\n\t\t\t\t} else {\n\t\t\t\t\tfuture.reject(xhr);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(content);\n\t\treturn future;\n\t},\n\t\n\t/** `get(url, content, headers, user, password)` is a shortcut for a request \n\twith the GET method.\n\t*/\n\tget: function get(url, content, headers, user, password) {\n\t\treturn this.request('GET', url, content, headers, user, password);\n\t},\n\t\n\t/** `getText(url, content, headers, user, password)` makes a GET request and\n\treturns the response's text.\n\t*/\n\tgetText: function getText(url, content, headers, user, password) {\n\t\treturn this.get(url, content, headers, user, password).then(function (xhr) {\n\t\t\treturn xhr.responseText;\n\t\t});\n\t},\n\t\n\t/** `getJSON(url, content, headers, user, password)` makes a GET request and\n\tparses the response text as JSON.\n\t*/\n\tgetJSON: function getJSON(url, content, headers, user, password) {\n\t\treturn this.get(url, content, headers, user, password).then(function (xhr) {\n\t\t\treturn JSON.parse(xhr.responseText);\n\t\t});\n\t},\n\t\n\t/** `post(url, content, headers, user, password)` is a shortcut for a \n\trequest with the POST method.\n\t*/\n\tpost: function post(url, content, headers, user, password) {\n\t\treturn this.request('POST', url, content, headers, user, password);\n\t},\n\t\n\t/** `postJSON(url, content, headers, user, password)` makes a POST request \n\twith the content encoded with `JSON.stringify()`.\n\t*/\n\tpostJSON: function postJSON(url, content, headers, user, password) {\n\t\theaders = headers || {};\n\t\theaders['Content-Type'] = \"application/json\";\n\t\treturn this.post(url, JSON.stringify(content) || 'null', headers, user, password);\n\t}\t\n}); // declare HttpRequest.\n\n/** Most methods of HttpRequest have \"static\" analogues to simplify creating an\ninstance and using a method right away.\n*/\n['request', 'get', 'getJSON', 'getText', 'post', 'postJSON'\n].forEach(function (id) {\n\tHttpRequest[id] = function () {\n\t\treturn HttpRequest.prototype[id].apply(new HttpRequest(), arguments);\n\t};\n});","/** # Parallel\n\nWrapper for standard web workers, that includes bootstraping and a future oriented interface.\n*/\nvar Parallel = exports.Parallel = declare({\n\t/** The constructor may take a worker instance to deal with. If not given, a new worker is build \n\tusing `newWorker()`. If given, it must be properly initialized.\n\t*/\n\tconstructor: function Parallel(worker) {\n\t\tif (!worker) {\n\t\t\tworker = Parallel.newWorker();\n\t\t}\n\t\tworker.onmessage = this.__onmessage__.bind(this);\n\t\tthis.worker = worker;\n\t},\n\t\n\t/** `newWorker()` builds a new web worker. Loading `creatartis-base` in its environment. Sets up\n\ta message handler that evaluates posted messages as code, posting the results back.\n\t*/\n\t\"static newWorker\": function newWorker() {\n\t\tvar src = 'self.base = ('+ exports.__init__ +')();'+\n\t\t\t\t'self.onmessage = ('+ (function (msg) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tself.base.Future.when(eval(msg.data)).then(function (result) {\n\t\t\t\t\t\t\tself.postMessage(JSON.stringify({ result: result }));\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tself.postMessage(JSON.stringify({ error: err +'' }));\n\t\t\t\t\t}\n\t\t\t\t}) +');',\n\t\t\tblob = new Blob([src], { type: 'text/javascript' });\n\t\treturn new Worker(URL.createObjectURL(blob));\n\t},\t\n\t\n\t/** The handler for the `worker.onmessage` event is the `__onmessage__(msg)` method. It deals \n\twith the futures issued by `run()`.\n\t*/\n\t__onmessage__: function __onmessage__(msg) {\n\t\tvar future = this.__future__;\n\t\tif (future) {\n\t\t\tthis.__future__ = null;\n\t\t\ttry {\n\t\t\t\tvar data = JSON.parse(msg.data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\tfuture.reject(data.error);\n\t\t\t\t} else {\n\t\t\t\t\tfuture.resolve(data.result);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tfuture.reject(err);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/** `run(code)` sends the code to run in the web worker in parallel.\n\t\n\tWarning! This method will raise an error if it is called while a previous execution is still \n\trunning.\n\t*/\n\trun: function run(code) {\n\t\tif (this.__future__) {\n\t\t\tthrow new Error('Worker is working!');\n\t\t}\n\t\tthis.__future__ = new Future();\n\t\tthis.worker.postMessage(code +'');\n\t\treturn this.__future__;\n\t}, \n\t\n\t/** A _\"static\"_ version of `run(code)` is provided also. It creates a web worker to run this \n\tcode in parallel, and returns a future for its result. After its finished the web worker is \n\tterminated.\n\t*/\n\t\"static run\": function run(code) {\n\t\tvar parallel = new Parallel();\n\t\treturn parallel.run(code).always(function () {\n\t\t\tparallel.worker.terminate();\n\t\t});\n\t},\n\t\n\t/** The method `importScripts` runs the same call in the worker.\n\t*/\n\timportScripts: function importScripts() {\n\t\treturn this.run('importScripts('+ \n\t\t\tArray.prototype.slice.call(arguments).map(JSON.stringify).join(',') +');');\n\t},\n\t\n\t/** `loadModule` loads a module in the worker. The module has to have a `__name__`, an \n\t`__init__` function that builds the module and a `__dependencies__` array of modules.\n\t*/\n\tloadModule: function loadModule(module, recursive) {\n\t\tvar parallel = this;\n\t\treturn Future.sequence(recursive ? module.__dependencies__ : [], function (dep) {\n\t\t\treturn parallel.loadModule(dep, recursive);\n\t\t}).then(function () {\n\t\t\treturn parallel.run('self.'+ module.__name__ +' || (self.'+ module.__name__ +'=('+ \n\t\t\t\tmodule.__init__ +')('+ \tmodule.__dependencies__.map(function (dep) {\n\t\t\t\t\treturn dep.__name__;\n\t\t\t\t}).join(',') +')), \"OK\"'\n\t\t\t);\n\t\t});\n\t},\n\t\n\t/** `consoleLog` is a version of `run` that logs the resulting value in the `console`. It is \n\tuseful for testing.\n\t*/\n\tconsoleLog: function consoleLog(code) {\n\t\tvar f = this.run(code);\n\t\tf.done(console.log);\n\t\treturn f;\n\t}\n}); // declare Parallel.","/** # Events\n\nEvents is a simple event handler that manages callbacks registered as listeners.\n*/\nvar Events = exports.Events = declare({\n/** The constructor argument may include:\n\n+ `maxListeners=Infinity`: Maximum amount of listeners these events can have.\n\t\n+ `isOpen=true`: An open Events accepts listeners to any event. Otherwise \n\tevent names\thave to be specified previously via the 'events' property in the \n\tconfiguration.\n\t\n+ `events=[]`: An array of event identifiers to be managed.\n*/\n\tconstructor: function Events(config) {\n\t\tinitialize(this, config)\n\t\t\t.number('maxListeners', { defaultValue: Infinity, coerce: true, minimum: 1 })\n\t\t\t.bool('isOpen', { defaultValue: true });\n\t\tvar __listeners__ = this.__listeners__ = {};\n\t\tif (config && Array.isArray(config.events)) {\n\t\t\tconfig.events.forEach(function (eventName) {\n\t\t\t\t__listeners__[eventName] = [];\n\t\t\t});\n\t\t}\n\t},\n\n\t/** `listeners(eventName)` returns an array with the listeners for the \n\tevent with the given identifier.\n\t*/\n\tlisteners: function listeners(eventName) {\n\t\tif (this.__listeners__.hasOwnProperty(eventName)) {\n\t\t\treturn this.__listeners__[eventName].slice(); // Return a copy of the array.\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t},\n\t\n\t/** `emit(eventName, ...args)` emits an event with the given arguments. \n\tListeners' callbacks are called asynchronously with the provided args. \n\t\n\tIf `eventName` is an array instead of a string, all events in the array are\n\temitted with the given args.\n\t*/\n\temit: function emit(eventName) {\n\t\tvar args;\n\t\tif (Array.isArray(eventName)) {\n\t\t\tvar events = this;\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t\teventName.forEach(function (name) {\n\t\t\t\targs[0] = name;\n\t\t\t\tevents.emit.apply(this, args);\n\t\t\t});\n\t\t}\n\t\tif (!this.__listeners__.hasOwnProperty(eventName)) {\n\t\t\treturn false;\n\t\t}\n\t\targs = Array.prototype.slice.call(arguments, 1);\n\t\tvar listeners = this.__listeners__[eventName];\n\t\tthis.__listeners__[eventName] = this.__listeners__[eventName]\n\t\t\t.filter(function (listener) {\n\t\t\t\tif (listener[1] > 0) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\treturn listener[0].apply(global, args);\n\t\t\t\t\t}, 1);\n\t\t\t\t\tlistener[1]--;\n\t\t\t\t\treturn listener[1] > 0;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\treturn true;\n\t},\n\t\n\t/** `on(eventName, callback, times=Infinity)` registers a callback function\n\tto listen to the event the given number of times, or always by default.\n\t*/\n\ton: function on(eventName, callback, times) {\n\t\tif (Array.isArray(eventName)) {\n\t\t\tvar events = this;\n\t\t\teventName.forEach(function (name) {\n\t\t\t\tevents.on(name, callback, times);\n\t\t\t});\n\t\t} else {\n\t\t\tif (!this.__listeners__.hasOwnProperty(eventName)) {\n\t\t\t\traiseIf(!this.isOpen, \"Event \", eventName, \" is not defined.\");\n\t\t\t\tthis.__listeners__[eventName] = [];\n\t\t\t}\n\t\t\tvar listeners = this.__listeners__[eventName];\n\t\t\traiseIf(this.listeners.length >= this.maxListeners,\n\t\t\t\t\"Cannot have more than \", this.maxListeners, \" listeners for event \", eventName, \".\");\n\t\t\ttimes = (+times) || Infinity;\n\t\t\tlisteners.push([callback, times]);\n\t\t}\n\t},\n\n\t/** `once(eventName, callback)` registers a callback to listen to the event\n\tonly once.\n\t*/\n\tonce: function once(eventName, callback) {\n\t\treturn this.on(eventName, callback, 1);\n\t},\n\n\t/** `off(eventName, callback)` deregisters the callback from the event.\n\t*/\n\toff: function off(eventName, callback) {\n\t\tif (Array.isArray(eventName)) {\n\t\t\tvar events = this;\n\t\t\teventName.forEach(function (name) {\n\t\t\t\tevents.off(name, callback);\n\t\t\t});\n\t\t} else if (this.__listeners__.hasOwnProperty(eventName)) {\n\t\t\tthis.__listeners__[eventName] = this.__listeners__[eventName]\n\t\t\t\t.filter(function (listener) {\n\t\t\t\t\treturn listener[0] !== callback;\n\t\t\t\t});\n\t\t}\n\t}\n}); // declare Events.\n","/** # Randomness\n\nRandomness is the base class for pseudorandom number generation algorithms and related functions. A \nlimitation with Javascript's `Math.random` function is that it cannot be seeded. This hinders its \nuse for simulations and simular purposes.\n*/\nvar Randomness = exports.Randomness = declare({\n\t/** The `Randomness` instances are build with a `generator` function. This is a function that is \n\tcalled without any parameters and returns a random number between 0 (inclusive) and 1 \n\t(exclusive). If none is given the standard `Math.random´ is used.\n\t*/\n\tconstructor: function Randomness(generator) {\n\t\tif (typeof generator === 'function') {\n\t\t\tthis.__random__ = generator;\n\t\t}\n\t},\n\n\t__random__: Math.random,\n\t\n\t/** The basic use of the pseudorandom number generator is through the method `random`. Called \n\twithout arguments returns a random number in [0,1). Called with only the first argument x, \n\treturns a random number in [0, x). Called with two arguments (x, y) return a random number in \n\t[x,y).\n\t*/\n\trandom: function random() {\n\t\tvar n = this.__random__();\n\t\tswitch (arguments.length) {\n\t\t\tcase 0: return n;\n\t\t\tcase 1: return n * arguments[0];\n\t\t\tdefault: return (1 - n) * arguments[0] + n * arguments[1];\n\t\t}\n\t},\n\n\t/** The method `randomInt` behaves the same way `random` does, but returns an integer instead.\n\t*/\n\trandomInt: function randomInt() {\n\t\treturn Math.floor(this.random.apply(this, arguments));\n\t},\n\n\t/** The method `randomBool` tests against a probability (50% by default), yielding true with the \n\tgiven chance, or else false.\n\t*/\n\trandomBool: function randomBool(prob) {\n\t\treturn this.random() < (isNaN(prob) ? 0.5 : +prob);\n\t},\n\n\t// ## Sequence handling ########################################################################\n\n\t/** A shortcut for building an array of n random numbers calling is `randoms`. Numbers are \n\tgenerated calling `random` many times.\n\t*/\n\trandoms: function randoms(n) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1),\n\t\t\tresult = [], i;\n\t\tn = +n;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tresult.push(this.random.apply(this, args));\n\t\t}\n\t\treturn result;\n\t},\n\n\t/** To randomnly selects an element from a sequence `xs` use `choice(xs)`. If more than one \n\targument is given, the element is chosen from the argument list.\n\t*/\n\tchoice: function choice(from) {\n\t\tfrom = arguments.length > 1 ? Array.prototype.slice.call(arguments) : \n\t\t\tArray.isArray(from) ? from : \n\t\t\titerable(from).toArray();\n\t\treturn from.length < 1 ? undefined : from[this.randomInt(from.length)];\n\t},\n\n\t/** To randomnly selects `n` elements from a sequence `xs` use `choices(n, xs)`. If more than \n\ttwo arguments are given, the elements are taken from the second arguments on.\n\t*/\n\tchoices: function choices(n, from) {\n\t\treturn this.split.apply(this, arguments)[0];\n\t},\n\t\n\t/** To take `n` elements from a sequence `xs` randomnly use `split(n, xs)`. It returns an array \n\t`[A, B]` with `A` being the taken elements and `B` the remaining ones. If more than two \n\targuments are given, elements are taken from the second argument on.\n\t*/\n\tsplit: function split(n, from) {\n\t\tfrom = arguments.length > 2 ? Array.prototype.slice.call(arguments) : iterable(from).toArray();\n\t\tvar r = [];\n\t\tfor (n = Math.min(from.length, Math.max(+n, 0)); n > 0; n--) {\n\t\t\tr = r.concat(from.splice(this.randomInt(from.length), 1));\n\t\t}\n\t\treturn [r, from];\n\t},\n\n\t/** The method `shuffle(xs)` randomnly rearranges elements in xs; returning a copy.\n\t*/\n\tshuffle: function shuffle(elems) { //TODO This can be optimized by making random swaps.\n\t\treturn this.choices(elems.length, elems);\n\t},\n\n\t// ## Weighted choices #########################################################################\n\t\n\t/** Given a sequence of `weightedValues` (pairs `[value, weight]`), a normalization scales all \n\tweights proportionally, so they add up to 1 and hence can be treated as probabilities. If any\n\tweight is negative, an error is raised.\n\t*/\n\tnormalizeWeights: function normalizeWeights(weightedValues) {\n\t\tweightedValues = iterable(weightedValues);\n\t\tvar sum = 0, length = 0;\n\t\tweightedValues.forEachApply(function (value, weight) {\n\t\t\traiseIf(weight < 0, \"Cannot normalize with negative weights!\");\n\t\t\tsum += weight;\n\t\t\tlength++;\n\t\t});\n\t\treturn weightedValues.mapApply(function (value, weight) {\n\t\t\treturn [value, sum === 0 ? 1 / length : weight / sum];\n\t\t});\n\t},\n\t\n\t/** A `weightedChoice` is a choice where each value has its own probability. The given \n\t`weightedValues` must be normalized, i.e. the weights must add up to 1.\n\t*/\n\tweightedChoice: function weightedChoice(weightedValues) {\n\t\tvar chance = this.random(), result;\n\t\titerable(weightedValues).forEachApply(function (value, weight) {\n\t\t\tchance -= weight;\n\t\t\tif (chance <= 0) {\n\t\t\t\tresult = value;\n\t\t\t\tIterable.stop();\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t},\n\t\n\t/** The method `weightedChoices` performs `n` weighted choices, without repeating values.\n\t*/\n\tweightedChoices: function weightedChoices(n, weightedValues) {\n\t\tweightedValues = iterable(weightedValues).toArray();\n\t\tvar maxProb = 1, results = [], random;\n\t\tfor (var i = 0; i < n; ++i) {\n\t\t\trandom = this.random(maxProb);\n\t\t\titerable(weightedValues).forEachApply(function (value, weight, i) {\n\t\t\t\trandom -= weight;\n\t\t\t\tif (random <= 0) {\n\t\t\t\t\tresults.push(value);\n\t\t\t\t\tmaxProb -= weight;\n\t\t\t\t\tweightedValues.splice(i, 1); // Remove selected element.\n\t\t\t\t\tIterable.stop();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn results;\n\t},\n\n\t// ## Distributions ############################################################################\n\n\t/** An `averagedDistribution(times)` of a `Randomness` instance is another `Randomness` instance \n\tbased on this one, but generating numbers by averaging its random values a given number of \n\t`times` (2 by default). The result is an aproximation of the normal distribution as times\n\tincreases.\n\t*/\n\taveragedDistribution: function averagedDistribution(n) {\n\t\tn = Math.max(+n, 2);\n\t\tvar randomFunc = this.__random__;\n\t\treturn new Randomness(function () { \n\t\t\tvar s = 0.0;\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\ts += randomFunc();\n\t\t\t}\n\t\t\treturn s / n;\n\t\t});\n\t},\n\t\n\t// ## Utilities ################################################################################\n\t\n\t/** Serialization and materialization using Sermat.\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: 'Randomness',\n\t\tserializer: function serialize_Randomness(obj) {\n\t\t\treturn obj.__random__ !== Math.random ? [obj.__random__] : [];\n\t\t},\n\t\tmaterializer: function materialize_Randomness(obj, args) {\n\t\t\treturn args && (args.length < 1 ? Randomness.DEFAULT : new Randomness(args[0]));\n\t\t}\n\t}\n}); //- declare Randomness.\n\n// ## Default generator ############################################################################\n\n/** `Randomness.DEFAULT` holds the default static instance, provided for convenience. Uses \n`Math.random()`.\n*/\nRandomness.DEFAULT = new Randomness();\n\n['random', 'randomInt', 'randomBool', 'choice', 'split', 'choices', 'shuffle',\n 'averagedDistribution'\n].forEach(function (id) {\n\tRandomness[id] = Randomness.DEFAULT[id].bind(Randomness.DEFAULT);\n});\n\n// ## Algorithms ###################################################################################\n\n// ### Linear congruential #########################################################################\n\n/** `Randomness.LinearCongruential` builds a pseudorandom number generator constructor implemented \nwith the [linear congruential algorithm](http://en.wikipedia.org/wiki/Linear_congruential_generator).\nIt also contain the following shortcuts to build common variants:\n*/\nvar LinearCongruential = Randomness.LinearCongruential = declare(Randomness, {\n\tconstructor: function LinearCongruential(m, a, c, seed) {\n\t\tvar i = isNaN(seed) ? Date.now() : Math.floor(seed);\n\t\tthis.__arguments__ = [m, a, c, i];\n\t\tthis.__random__ = function __random__() {\n\t\t\treturn (i = (a * i + c) % m) / m;\n\t\t};\n\t},\n\t\n\t'static __SERMAT__': {\n\t\tidentifier: 'LinearCongruential',\n\t\tserializer: function serializer_LinearCongruential(obj) {\n\t\t\treturn obj.__arguments__;\n\t\t}\n\t},\n\t\n\t/** + `numericalRecipies(seed)`: builds a linear congruential pseudorandom number generator as \n\t\tit is specified in [Numerical Recipies](http://www.nr.com/).\n\t*/\n\t'static numericalRecipies': function (seed) {\n\t\treturn new LinearCongruential(0xFFFFFFFF, 1664525, 1013904223, seed);\n\t},\n\t\n\t/** + `borlandC(seed)`: builds a linear congruential pseudorandom number generator as it used by\n\t\tBorland C/C++.\n\t*/\n\t'static borlandC': function (seed) {\n\t\treturn new LinearCongruential(0xFFFFFFFF, 22695477, 1, seed);\n\t},\n\t\n\t/** + `glibc(seed)`: builds a linear congruential pseudorandom number generator as it used by\n\t\t[glibc](http://www.mscs.dal.ca/~selinger/random/).\n\t*/\n\t'static glibc': function (seed) {\n\t\treturn new LinearCongruential(0xFFFFFFFF, 1103515245, 12345, seed);\n\t}\n});\n\n// ### Mersenne twister ############################################################################\n\n/** The method `Randomness.mersenneTwister` returns a pseudorandom number generator constructor \nimplemented with the [Mersenne Twister algorithm](http://en.wikipedia.org/wiki/Mersenne_twister#Pseudocode).\n*/\nRandomness.MersenneTwister = (function (){\n\t/** Bit operations in Javascript deal with signed 32 bit integers. This algorithm deals with\n\tunsigned 32 bit integers. That is why this function is necessary.\n\t*/\n\tfunction unsigned(n) {\n\t\treturn n < 0 ? n + 0x100000000 : n;\n\t}\n\t\n\tfunction initialize(seed) {\n\t\tvar numbers = new Array(624),\n\t\t\tlast;\n\t\tnumbers[0] = last = seed;\n\t\tfor (var i = 1; i < 624; ++i) {\n\t\t\tnumbers[i] = last = (0x6C078965 * unsigned(last ^ (last << 30)) + i) % 0xFFFFFFFF;\n\t\t}\n\t\treturn numbers;\n\t}\n\t\n\tfunction generate(numbers) {\n\t\tfor(var i = 0; i < 624; ++i) {\n\t\t\tvar y = (numbers[i] & 0x80000000) | (numbers[(i+1) % 624] & 0x7FFFFFFF);\n\t\t\tnumbers[i] = unsigned(numbers[(i + 397) % 624] ^ (y * 2));\n\t\t\tif ((y & 1) !== 0) {\n\t\t\t\tnumbers[i] = unsigned(numbers[i] ^ 0x9908B0DF);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn declare(Randomness, {\n\t\tconstructor: function MersenneTwister(seed) {\n\t\t\tthis.__seed__ = isNaN(seed) ? Date.now() : Math.floor(seed);\n\t\t\tvar numbers = initialize(this.__seed__),\n\t\t\t\tindex = 0;\n\t\t\tthis.__random__ = function () {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tgenerate(numbers);\n\t\t\t\t}\n\t\t\t\tvar y = numbers[index];\n\t\t\t\ty = unsigned(y ^ (y << 11));\n\t\t\t\ty = unsigned(y ^ ((y >>> 7) & 0x9D2C5680));\n\t\t\t\ty = unsigned(y ^ ((y >>> 15) & 0xEFC60000));\n\t\t\t\ty = unsigned(y ^ (y << 18));\n\t\t\t\tindex = (index + 1) % 624;\n\t\t\t\treturn y / 0xFFFFFFFF;\n\t\t\t};\n\t\t},\n\t\t\n\t\t'static __SERMAT__': {\n\t\t\tidentifier: 'MersenneTwister',\n\t\t\tserializer: function serializer_MersenneTwister(obj) {\n\t\t\t\treturn [obj.__seed__];\n\t\t\t}\n\t\t},\n\t});\n})();","/** # Chronometer\n\nA Chronometer is a simple tool to measure time.\n*/\nvar Chronometer = exports.Chronometer = declare({\n\t/** The constructor may take a timestamp to initiate the chronometer, \n\totherwise it uses the current time.\n\t*/\n\tconstructor: function Chronometer(t) {\n\t\tthis.reset(t);\n\t},\n\t\n\t/** Resetting the chronometer sets its `__timestamp__` property to the given\n\ttime or now by default.\n\t*/\n\treset: function reset(t) {\n\t\treturn this.__timestamp__ = t || Date.now();\n\t},\n\n\t/** `time()` gets the elapsed time since the creation or resetting of the\n\tchronometer.\n\t*/\n\ttime: function time() {\n\t\treturn Date.now() - this.__timestamp__;\n\t},\n\n\t/** `tick(t=now)` gets the elapsed time since the creation or resetting of \n\tthe chronometer, and resets it.\n\t*/\n\ttick: function tick(t) {\n\t\tvar result = this.time();\n\t\tthis.reset(t);\n\t\treturn result;\n\t},\n\n\t/** `chronometer(f, times=1)` executes the parameterless function `f` the \n\tgiven number of `times` (1 by default) and logs the time each run takes. \n\t\n\tFinally, returns the average of all those measurements.\n\t*/\n\tchronometer: function chronometer(f, times) {\n\t\ttimes = times || 1;\n\t\tvar total = 0.0;\n\t\tfor (var i = 0; i < times; i++) {\n\t\t\tthis.reset();\n\t\t\tf.call(this);\n\t\t\ttotal += this.time();\n\t\t}\n\t\treturn total / times;\n\t}\n}); // declare Chronometer.\n","/** # Statistic\n\nComponent representing statistical accounting for one concept.\n*/\nvar Statistic = exports.Statistic = declare({\n\t/** Every statistic object has a set of keys that identify the numerical value it represents. \n\tThis can be as simple as one string, or an object with many values for different aspects of the \n\tstatistic.\n\t*/\n\tconstructor: function Statistic(keys) {\n\t\tif (typeof keys !== 'undefined') {\n\t\t\tthis.keys = typeof keys === 'object' ? \t(keys !== null ? keys : '') : keys +'';\n\t\t}\n\t\tthis.reset(); // At first all stats must be reset.\n\t},\n\t\n\t/** Resetting a statistic deletes all registered values and sets all properties to zero.\n\t*/\n\treset: function reset() {\n\t\tthis.__count__ = 0; \n\t\tthis.__sum__ = 0.0; \n\t\tthis.__sqrSum__ = 0.0; \n\t\tthis.__min__ = Infinity;\n\t\tthis.__max__ = -Infinity;\n\t\tthis.__minData__ = undefined;\n\t\tthis.__maxData__ = undefined;\n\t\treturn this; // For chaining.\n\t},\n\n\t/** An Statistic object may apply to a certain concept or not, depending on its `keys`. When \n\tdealing with sets of keys (objects), `applies(keys)` checks if all the given keys are this \n\tstatistic's keys.\n\t*/\n\tapplies: function applies(keys) {\n\t\tif (typeof keys === 'undefined') {\n\t\t\treturn false;\n\t\t} else if (keys === null) {\n\t\t\tkeys = '';\n\t\t}\n\t\tif (typeof this.keys === 'undefined') {\n\t\t\treturn false;\n\t\t} else if (typeof this.keys === 'object') {\n\t\t\tvar i;\n\t\t\tif (typeof keys === 'object') {\n\t\t\t\tif (Array.isArray(this.keys) && Array.isArray(keys)) {\n\t\t\t\t\tfor (i in keys) {\n\t\t\t\t\t\tif (this.keys.indexOf(keys[i]) < 0) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else { \n\t\t\t\t\tfor (i in keys) {\n\t\t\t\t\t\tif (typeof this.keys[i] === 'undefined' || keys[i] !== this.keys[i]) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn typeof keys !== 'object' && this.keys === keys +'';\n\t\t}\n\t},\n\t\n\t// ## Querying statistics ######################################################################\n\t\n\t/** `count()` gets the current count, or 0 if values have not been added.\n\t*/\n\tcount: function count() {\n\t\treturn this.__count__;\n\t},\n\t\n\t/** `sum()` gets the current sum, or zero if values have not been added.\n\t*/\n\tsum: function sum() {\n\t\treturn this.__sum__;\n\t},\n\t\n\t/** `squareSum()` gets the current sum of squares, or zero if values have not been added.\n\t*/\n\tsquareSum: function squareSum() {\n\t\treturn this.__sqrSum__;\n\t},\n\t\n\t/** `minimum()` gets the current minimum, or Infinity if values have not been added.\n\t*/\n\tminimum: function minimum() {\n\t\treturn this.__min__;\n\t},\n\t\n\t/** `maximum()` gets the current maximum, or -Infinity if values have not been added.\n\t*/\n\tmaximum: function maximum() {\n\t\treturn this.__max__;\n\t},\n\t\n\t/** `minData()` gets the data associated with the current minimum, or `undefined` if there is \n\tnot one.\n\t*/\n\tminData: function minData() {\n\t\treturn this.__minData__;\n\t},\n\t\n\t/** `maxData()` gets the data associated with the current maximum, or `undefined` if there is \n\tnot one.\n\t*/\n\tmaxData: function maxData() {\n\t\treturn this.__maxData__;\n\t},\n\n\t/** `average()` calculates the current average, or zero if values have not been added.\n\t*/\n\taverage: function average() {\t\n\t\tvar count = this.count();\n\t\treturn count > 0 ? this.sum() / count : 0.0;\n\t},\n\t\n\t/** `variance(center=average)` calculates current variance, as the average squared difference of\n\teach element with the center, which is equal to the average by default. Returns zero if values \n\thave not been added.\n\t*/\n\tvariance: function variance(biased, center) {\n\t\tif (isNaN(center)) {\n\t\t\tcenter = this.average();\n\t\t}\n\t\tvar count = this.count(),\n\t\t\tv = count > 1 ? center * center + (this.squareSum() - 2 * center * this.sum()) / count : 0.0;\n\t\treturn biased || count < 2 ? v : v * count / (count - 1);\n\t},\n\n\t/** `standardDeviation(center=average)` calculates current standard deviation, as the square \n\troot of the current variance.\n\t*/\n\tstandardDeviation: function standardDeviation(biased, center) {\n\t\treturn Math.sqrt(this.variance(center), biased);\n\t},\n\t\n\t// ## Updating statistics ######################################################################\n\t\n\t/** Values are added to a statistic with `add(value, data=none)`, which updates the statistic. \n\tOptionally data about the instances can be attached.\n\t*/\n\tadd: function add(value, data) {\n\t\tif (value === undefined) {\n\t\t\tvalue = 1;\n\t\t} else if (isNaN(value)) {\n\t\t\traise(\"Statistics.add(): Value \", value, \" cannot be added.\"); \n\t\t}\n\t\tthis.__count__ += 1;\n\t\tthis.__sum__ += value;\n\t\tthis.__sqrSum__ += value * value;\n\t\tif (this.__min__ > value) {\n\t\t\tthis.__min__ = value;\n\t\t\tthis.__minData__ = data;\n\t\t}\n\t\tif (this.__max__ < value) {\n\t\t\tthis.__max__ = value;\n\t\t\tthis.__maxData__ = data;\n\t\t}\n\t\treturn this; // For chaining.\n\t},\n\n\t/** `addAll(values, data=none)` adds all the given values (using `add()`).\n\t*/\n\taddAll: function addAll(values, data) {\t\n\t\tfor (var i = 0; i < values.length; i++) {\n\t\t\tthis.add(values[i], data);\n\t\t}\n\t\treturn this; // For chaining.\n\t},\n\t\n\t/** `gain(value, factor=DEFAULT_GAIN_FACTOR, data=none)` is similar to `add()`, but fades \n\tprevious values by multiplying them by the given factor. This is useful to implement schemes \n\tsimilar to exponential moving averages.\n\t*/\n\tgain: function gain(value, factor, data) {\n\t\tfactor = isNaN(factor) ? this.DEFAULT_GAIN_FACTOR : +factor;\n\t\tthis.__count__ *= factor;\n\t\tthis.__sum__ *= factor;\n\t\tthis.__sqrSum__ *= factor;\n\t\treturn this.add(value, data);\n\t},\n\n\t/** The `DEFAULT_GAIN_FACTOR=0.99` is used in the `gain()` method.\n\t*/\n\tDEFAULT_GAIN_FACTOR: 0.99,\n\t\n\t/** `gainAll(values, factor=DEFAULT_GAIN_FACTOR, data=none)` gains all the given values (using \n\t`gain()`).\n\t*/\n\tgainAll: function gainAll(values, factor, data) {\t\n\t\tfor (var i = 0; i < values.length; i++) {\n\t\t\tthis.gain(values[i], factor, data);\n\t\t}\n\t\treturn this; // For chaining.\n\t},\n\t\n\t/** `addStatistic(stat)` adds the values in the given Statistic object to this one.\n\t*/\n\taddStatistic: function addStatistic(stat) {\n\t\tthis.__count__ += stat.__count__; \n\t\tthis.__sum__ += stat.__sum__; \n\t\tthis.__sqrSum__ += stat.__sqrSum__;\n\t\tif (stat.__min__ < this.__min__) {\n\t\t\tthis.__min__ = stat.__min__;\n\t\t\tthis.__maxData__ = stat.__maxData__;\n\t\t}\n\t\tif (stat.__max__ > this.__max__) {\n\t\t\tthis.__max__ = stat.__max__;\n\t\t\tthis.__maxData__ = stat.__maxData__;\n\t\t}\t\t\n\t\treturn this;\n\t},\n\t\n\t// ### Time handling ###########################################################################\n\t\n\t/** `startTime(timestamp=now)` starts a chronometer for this statistic.\n\t*/\n\tstartTime: function startTime(timestamp) {\n\t\tvar chronometer = this.__chronometer__ || (this.__chronometer__ = new Chronometer());\n\t\treturn chronometer.reset(timestamp);\n\t},\n\t\n\t/** `addTime(data=undefined)` adds to this statistic the time since `startTime` was called.\n\t*/\n\taddTime: function addTime(data) {\n\t\traiseIf(!this.__chronometer__, \"Statistic's chronometer has not been started.\");\n\t\treturn this.add(this.__chronometer__.time(), data);\n\t},\n\n\t/** `addTick(data=undefined)` adds to this statistic the time since `startTime` was called, and \n\tresets the chronometer.\n\t*/\n\taddTick: function addTick(data) {\n\t\traiseIf(!this.__chronometer__, \"Statistic's chronometer has not been started.\");\n\t\treturn this.add(this.__chronometer__.tick(), data);\n\t},\n\t\n\t// ## Tests and inference ######################################################################\n\t\n\t/** The static `z_test` method returns the mean statistic for [z-tests](http://en.wikipedia.org/wiki/Z-test)\n\tgiven the expected `mean` and `variance` and the `sampleCount` and `sampleMean`.\t\n\t*/\n\t'static z_test': function z_test(mean, variance, sampleCount, sampleMean) {\n\t\tvar r = {},\n\t\t\tz = r.z = (sampleMean - mean) / Math.sqrt(variance / sampleCount),\n\t\t\tp = math.gauss_cdf(z);\n\t\tr.p_lessThan    = z < 0 ? p : 0;\n\t\tr.p_greaterThan = z > 0 ? 1 - p : 0;\n\t\tr.p_notEqual    = z !== 0 ? 2 * Math.max(r.p_lessThan, r.p_greaterThan) : 0; //TODO Check this.\n\t\treturn r;\n\t},\n\t\n\t/** The instance `z_test` method is analogue to the static one, using this object's data. The \n\t`variance` is assumed to this sample's variance by default.\n\t*/\n\tz_test: function z_test(mean, variance) {\n\t\tvariance = isNaN(variance) ? this.variance() : +variance;\n\t\treturn Statistic.z_test(mean, variance, this.count(), this.average());\n\t},\n\t\n\t/** The static `t_test1` method returns the mean statistic for \n\t[Student's one-sample t-tests](http://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test) \n\tgiven: `mean`, `sampleCount`, `sampleMean` and `sampleStandardDeviation`.\n\t*/\n\t'static t_test1': function t_test1(mean, sampleCount, sampleMean, sampleStandardDeviation) {\n\t\treturn { \n\t\t\tt: (sampleMean - mean) / sampleStandardDeviation * Math.sqrt(sampleCount)\n\t\t};\n\t},\n\t\n\t/** The instance `t_test1` method is analogue to the static one, using this object's data. The \n\t`mean` is assumed to be zero by default.\n\t*/\n\tt_test1: function t_test1(mean, sampleCount, sampleMean, sampleStandardDeviation) {\n\t\treturn Statistic.t_test1(\n\t\t\tisNaN(mean) ? 0.0 : +mean,\n\t\t\tisNaN(sampleCount) ? this.count() : +sampleCount,\n\t\t\tisNaN(sampleMean) ? this.average() : +sampleMean,\n\t\t\tisNaN(sampleStandardDeviation) ? this.standardDeviation() : +sampleStandardDeviation\n\t\t);\n\t},\n\t\n\t/** The static `t_test2` method returns the mean statistic for \n\t[Student's two-sample t-tests](http://en.wikipedia.org/wiki/Student%27s_t-test#Unequal_sample_sizes.2C_equal_variance) \n\tgiven the two sample groups' count, mean and variance.\n\t*/\n\t'static t_test2': function t_test2(sampleCount1, sampleCount2, \n\t\t\tsampleMean1, sampleMean2, sampleVariance1, sampleVariance2) {\n\t\tvar pooledVariance = (((sampleCount1 - 1) * sampleVariance1 + (sampleCount2 - 1) * sampleVariance2) /\n\t\t\t(sampleCount1 + sampleCount2 - 2));\n\t\treturn { \n\t\t\tt: (sampleMean1 - sampleMean2) / Math.sqrt(pooledVariance * (1 / sampleCount1 + 1 / sampleCount2))\n\t\t};\n\t},\n\t\n\t/** The instance `t_test2` method is analogue to the static one, using this object's and another\n\tone's data.\n\t*/\n\tt_test2: function t_test2(other) {\n\t\treturn Statistic.t_test2(\n\t\t\tthis.count(), other.count(),\n\t\t\tthis.average(), other.average(),\n\t\t\tthis.variance(), other.variance()\n\t\t);\n\t},\n\t\n\t// ## Other ####################################################################################\n\t\n\t/** The default string representation is the concatenation of the statistic's id, count, \n\tminimum, average, maximum and standard deviation, separated by tabs.\n\t*/\n\ttoString: function toString(sep) {\n\t\tsep = ''+ (sep || '\\t');\n\t\tvar keys = typeof this.keys !== 'object' ? this.keys + '' :\n\t\t\titerable(this.keys).map(function (kv) {\n\t\t\t\treturn kv[0] +':'+ kv[1];\n\t\t\t}).join(', ');\n\t\treturn [keys, this.count(), this.minimum(), this.average(), \n\t\t\tthis.maximum(), this.standardDeviation()].join(sep);\n\t},\n\t\n\t/** Serialization and materialization using Sermat, registered with identifier\n\t`creatartis-base.Statistic`.\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: 'Statistic',\n\t\tserializer: function serialize_Statistic(obj) {\n\t\t\tvar result = [obj.keys || null, obj.__count__, obj.__sum__, obj.__sqrSum__, obj.__min__, obj.__max__];\n\t\t\tif (typeof obj.__minData__ !== 'undefined') { // Assumes this implies (typeof obj.__maxData__ !== 'undefined')\n\t\t\t\treturn result.concat([obj.__minData__, obj.__maxData__]);\n\t\t\t} else {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t},\n\t\tmaterializer: function materialize_Statistic(obj, args  /* [keys, count, sum, sqrSum, min, max, minData, maxData] */) {\n\t\t\tif (!args) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar stat = args[0] ? new Statistic(args[0]) : new Statistic();\n\t\t\tstat.__count__ = +args[1]; \n\t\t\tstat.__sum__ = +args[2];\n\t\t\tstat.__sqrSum__ = +args[3];\n\t\t\tstat.__min__ = +args[4];\n\t\t\tstat.__max__ = +args[5];\n\t\t\tif (stat.__count__ > 0) {\n\t\t\t\tstat.__minData__ = args[6];\n\t\t\t\tstat.__maxData__ = args[7];\n\t\t\t}\n\t\t\treturn stat;\n\t\t}\n\t}\n}); // declare Statistic.","/** # Statistics\n\nStatistical accounting, measurements and related functions.\n*/\nvar Statistics = exports.Statistics = declare({\n\t/** A `Statistics` is a bundle of Statistic objects.\n\t*/\n\tconstructor: function Statistics() {\n\t\tthis.__stats__ = {};\n\t},\n\t\n\t/** Each [`Statistic`](Statistic.js.html) object is stored in `__stats__` indexed by an \n\tidentifier string generated by `__id__(keys)`.\n\t*/\n\t__id__: function __id__(keys) {\n\t\tif (typeof keys === 'object' && keys !== null) {\n\t\t\tif (Array.isArray(keys)) {\n\t\t\t\treturn JSON.stringify(keys.slice().sort());\n\t\t\t} else {\n\t\t\t\treturn Object.keys(keys).sort().map(function (n) {\n\t\t\t\t\treturn JSON.stringify(n) +':'+ JSON.stringify(keys[n]);\n\t\t\t\t}).join(',');\n\t\t\t}\n\t\t} else {\n\t\t\treturn JSON.stringify(keys)+'';\n\t\t}\n\t},\n\t\n\t/** `stats(keys)` gets the [`Statistic`](Statistic.js.html) objects that applies to `keys`.\n\t*/\n\tstats: function stats(keys) {\n\t\treturn iterable(this.__stats__).map(function (keyVal) {\n\t\t\treturn keyVal[1];\n\t\t}, function (stat) {\n\t\t\treturn stat.applies(keys);\n\t\t}).toArray();\n\t},\n\t\n\t/** `stat(keys)` gets the statistic that applies to `keys`, or creates it if it does not exist.\n\t*/\n\tstat: function stat(keys) {\n\t\tvar id = this.__id__(keys);\n\t\treturn this.__stats__[id] || (this.__stats__[id] = new Statistic(keys));\n\t},\n\t\n\t/** `addObject(obj, data)` adds the values in the given object, one stat per member. If a member \n\tis an array, all numbers in the array are added.\n\t*/\n\taddObject: function addObject(obj, data) {\n\t\traiseIf(!obj, \"Cannot add object \"+ JSON.stringify(obj) +\".\");\n\t\tfor (var name in obj) {\n\t\t\tif (Array.isArray(obj[name])) {\n\t\t\t\tthis.addAll(name, obj[name], data);\n\t\t\t} else {\n\t\t\t\tthis.add(name, obj[name], data);\n\t\t\t}\n\t\t}\n\t\treturn this; // For chaining.\n\t},\n\t\n\t/** `addStatistic(stat, keys=stat.keys)` adds the values in the given [`Statistic`](Statistic.js.html) \n\tto the one with the same keys in this object. If there is none one is created. This does not put\n\tthe argument as an statistic of this object.\n\t*/\n\taddStatistic: function addStatistic(stat, keys) {\n\t\treturn this.stat(typeof keys !== 'undefined' ? keys : stat.keys).addStatistic(stat);\n\t},\n\t\n\t/** `addStatistics(stats, keys=all)` combines the stats of the given `Statistics` with this \n\tone's.\n\t*/\n\taddStatistics: function addStatistics(stats, keys) {\n\t\tvar self = this;\n\t\tstats.stats(keys).forEach(function (stat) {\n\t\t\tself.stat(stat.keys).addStatistic(stat);\n\t\t});\n\t\treturn this;\n\t},\n\t\n\t// ## Statistic updating shortcuts #############################################################\n\t\n\t/** `reset(keys)` resets all the stats that apply to the given `keys`.\n\t*/\n\treset: function reset(keys) {\n\t\tthis.stats(keys).forEach(function (stat) {\n\t\t\tstat.reset();\n\t\t});\n\t\treturn this; // For chaining.\n\t},\n\n\t/** `add(keys, value, data)` adds a value to the corresponding statistics.\n\t*/\n\tadd: function add(keys, value, data) {\n\t\treturn this.stat(keys).add(value, data);\n\t},\n\t\n\t/** `gain(keys, value, factor, data)` gain a value to the corresponding statistics.\n\t*/\n\tgain: function gain(keys, value, factor, data) {\n\t\treturn this.stat(keys).gain(value, factor, data);\n\t},\n\t\n\t/** `addAll(keys, values, data)` add all values to the corresponding statistics.\n\t*/\n\taddAll: function addAll(keys, values, data) {\n\t\treturn this.stat(keys).addAll(values, data);\n\t},\n\t\n\t/** `gainAll(keys, values, factor, data)` gain all values to the corresponding statistics.\n\t*/\n\tgainAll: function gainAll(keys, values, factor, data) {\n\t\treturn this.stat(keys).addAll(values, data);\n\t},\n\n\t/** `startTime(keys, timestamp=now)` starts the timers of all the corresponding statistics.\n\t*/\n\tstartTime: function startTime(keys, timestamp) {\n\t\treturn this.stat(keys).startTime(timestamp);\n\t},\n\t\n\t/** `addTime(keys, data=undefined)` adds the times elapsed since the timers of the corresponding \n\tstatistics was started.\n\t*/\n\taddTime: function addTime(keys, data) {\n\t\treturn this.stat(keys).addTime(data);\n\t},\n\t\n\t/** `addTick(keys, data=undefined)` adds the times elapsed since the timers of the corresponding \n\tstatistics was started, and resets them.\n\t*/\n\taddTick: function addTick(keys, data) {\n\t\treturn this.stat(keys).addTick(data);\n\t},\n\t\n\t// ## Statistic querying shortcuts #############################################################\n\t\n\t/** `accumulation(keys)` creates a new statistic that accumulates all that apply to the given \n\tkeys.\n\t*/\n\taccumulation: function accumulation(keys) {\n\t\tvar acc = new Statistic(keys);\n\t\tthis.stats(keys).forEach(function (stat) {\n\t\t\tacc.addStatistic(stat);\n\t\t});\n\t\treturn acc;\n\t},\n\t\n\t/** `count(keys)` gets the count of the accumulation of the corresponding statistics.\n\t*/\n\tcount: function count(keys) {\n\t\treturn this.accumulation(keys).count();\n\t},\n\t\n\t/** `sum(keys)` gets the sum of the accumulation of the corresponding statistics.\n\t*/\n\tsum: function sum(keys) {\n\t\treturn this.accumulation(keys).sum();\n\t},\n\t\n\t/** `squareSum(keys)` gets the sum of squares of the accumulation of the corresponding \n\tstatistics.\n\t*/\n\tsquareSum: function squareSum(keys) {\n\t\treturn this.accumulation(keys).squareSum();\n\t},\n\t\n\t/** `minimum(keys)` gets the minimum value of the accumulation of the corresponding statistics.\n\t*/\n\tminimum: function minimum(keys) {\n\t\treturn this.accumulation(keys).minimum();\n\t},\n\t\n\t/** `maximum(keys)` gets the maximum value of the accumulation of the corresponding statistics.\n\t*/\n\tmaximum: function maximum(keys) {\n\t\treturn this.accumulation(keys).maximum();\n\t},\n\t\n\t/** `average(keys)` gets the average value of the accumulation of the corresponding statistics.\n\t*/\n\taverage: function average(keys) {\n\t\treturn this.accumulation(keys).average();\n\t},\n\t\n\t/** `variance(keys, center=average)` calculates the variance of the accumulation of the \n\tcorresponding statistics.\n\t*/\n\tvariance: function variance(keys, center) {\n\t\treturn this.accumulation(keys).variance(center);\n\t},\n\t\n\t/** `standardDeviation(keys, center=average)` calculates the standard deviation of the \n\taccumulation of the corresponding statistics.\n\t*/\n\tstandardDeviation: function standardDeviation(keys, center) {\n\t\treturn this.accumulation(keys).standardDeviation(center);\n\t},\n\t\n\t// ## Other ####################################################################################\n\t\n\t/** The default string representation concatenates the string representations off all \n\t`Statistic` objects, one per line.\n\t*/\n\ttoString: function toString(fsep, rsep) {\n\t\tfsep = ''+ (fsep || '\\t');\n\t\trsep = ''+ (rsep || '\\n');\n\t\tvar stats = this.__stats__;\n\t\treturn Object.keys(stats).map(function (name) {\n\t\t\treturn stats[name].toString(fsep);\n\t\t}).join(rsep);\n\t},\n\t\n\t/** Serialization and materialization using Sermat, registered with identifier \n\t`creatartis-base.Statistics`.\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: 'Statistics',\n\t\tserializer: function serialize_Statistics(obj) {\n\t\t\tvar stats = obj.__stats__;\n\t\t\treturn Object.keys(stats).map(function (k) {\n\t\t\t\treturn stats[k];\n\t\t\t});\n\t\t},\n\t\tmaterializer: function materialize_Statistics(obj, args) {\n\t\t\tif (!args) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar result = new Statistics();\n\t\t\targs.forEach(function (stat) {\n\t\t\t\tresult.addStatistic(stat);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t}\n}); // declare Statistics.","/** # Logger\n\nSimple logging capabilities in a similar (but greatly simplified) fashion that \nLog4J.\n*/\nvar Logger = exports.Logger\t= declare({\n\t/** All loggers have a name, a level and a parent (except `Logger.ROOT`). \n\tThe level is the priority of the entries accepted by the logger, and is used\n\tto filter which messages are displayed. All log entries accepted by a logger\n\tare forwarded to the parent (if defined).\n\t*/\n\tconstructor: function Logger(name, parent, level) { \n\t\tthis.name = ''+ name;\n\t\tthis.parent = parent || Logger.ROOT;\n\t\tthis.level = level || \"INFO\";\n\t\tthis.appenders = [];\n\t},\n\t\n\t/** `log(level, message...)` appends a new entry in the log if the given \n\tlevel is greater than the current logger's level. The message results of a \n\ttimestamp and the arguments.\n\t*/\n\tlog: function log(level) {\n\t\tvar passes = this.LEVELS[this.level] <= this.LEVELS[level];\n\t\tif (passes) {\n\t\t\tvar logger = this,\n\t\t\t\tmessage = Array.prototype.slice.call(arguments, 1).join('');\n\t\t\tthis.appenders.forEach(function (appender) {\n\t\t\t\tvar format = appender.format || logger.defaultFormat;\n\t\t\t\tappender(format(logger.name, new Date(), level, message));\n\t\t\t});\n\t\t\tif (this.parent) {\n\t\t\t\tthis.parent.log.apply(this.parent, arguments); // Forward to parent.\n\t\t\t}\n\t\t}\n\t\treturn passes;\n\t},\n\t\n\t/** Log levels are numbers, with the default one being 0. Some standard \n\tlevels are predefined. For each of these there is a shortcut method to log\n\tdirectly in that level:\n\t*/\n\tLEVELS: {\n\t\tTRACE: -Infinity, DEBUG: -1, INFO: 0, WARN: 1, ERROR: 2, FATAL: Infinity,\n\t\tOK: 0, FAIL: 1, TODO: 1, FIXME: 1 // Utility levels.\n\t},\n\t\n\t/** + `trace(message...)` logs an entry with the `TRACE` level.\n\t*/\n\ttrace: function trace() {\n\t\treturn this.log(\"TRACE\", Array.prototype.slice.call(arguments, 0).join(\"\"));\n\t},\n\t\n\t/** + `debug(message...)` logs an entry with the `DEBUG` level.\n\t*/\n\tdebug: function debug() {\n\t\treturn this.log(\"DEBUG\", Array.prototype.slice.call(arguments, 0).join(\"\"));\n\t},\n\n\t/** + `info(message...)` logs an entry with the `INFO` level.\n\t*/\n\tinfo: function info() {\n\t\treturn this.log(\"INFO\", Array.prototype.slice.call(arguments, 0).join(\"\"));\n\t},\n\n\t/** + `warn(message...)` logs an entry with the `WARN` level.\n\t*/\n\twarn: function warn() {\n\t\treturn this.log(\"WARN\", Array.prototype.slice.call(arguments, 0).join(\"\"));\n\t},\n\t\n\t/** + `error(message...)` logs an entry with the `ERROR` level.\n\t*/\n\terror: function error() {\n\t\treturn this.log(\"ERROR\", Array.prototype.slice.call(arguments, 0).join(\"\"));\n\t},\n\n\t/** + `fatal(message...)` logs an entry with the `FATAL` level.\n\t*/\n\tfatal: function fatal() {\n\t\treturn this.log(\"FATAL\", Array.prototype.slice.call(arguments, 0).join(\"\"));\n\t},\n\t\n\t/** ## Formats. ###########################################################\n\t\n\tEntries are formatted before appending them. Each appender may have a\n\tdifferent format function. \n\t*/\n\t\n\t/** By default, `defaultFormat(name, time, level, message)`\n\tis used. It simply concatenates the log entry data in a string.\n\t*/\n\tdefaultFormat: function defaultFormat(name, time, level, message) {\n\t\treturn [level, name, Text.formatDate(time, 'hhnnss.SSS'), message].join(' ');\n\t},\n\t\n\t/** The `htmlFormat(tag='pre', cssClassPrefix='log_')` writes the entry in\n\tvalid HTML with CSS styling support.\n\t*/\n\thtmlFormat: function htmlFormat(tag, cssClassPrefix) {\n\t\ttag = tag || 'p';\n\t\tcssClassPrefix = cssClassPrefix || 'log_';\n\t\treturn function (name, time, level, message) {\n\t\t\treturn ['<', tag, ' class=\"', cssClassPrefix, level, '\">', \n\t\t\t\t'<span class=\"', cssClassPrefix, 'level\">', level, '</span> ',\n\t\t\t\t'<span class=\"', cssClassPrefix, 'name\">', name, '</span> ',\n\t\t\t\t'<span class=\"', cssClassPrefix, 'time\">', Text.formatDate(time, 'hhnnss.SSS'), '</span> ',\n\t\t\t\t'<span class=\"', cssClassPrefix, 'message\">', \n\t\t\t\t\tText.escapeXML(message).replace(/\\n/g, '<br/>').replace(/\\t/g, '&nbsp;&nbsp;&nbsp;'), \n\t\t\t\t'</span>',\n\t\t\t\t'</', tag, '>'].join('');\n\t\t};\n\t},\n\t\n\t/** ## Appenders. ##########################################################\n\t\n\tAppenders are functions attached to loggers that output the log entries in\n\tdifferent ways.\n\t*/\n\t\n\t/** `appendToConsole()` adds to the logger an appender that writes messages \n\tto the console (using console.log).\n\t*/\n\tappendToConsole: (function () {\n\t\tfunction __consoleAppender__(entry) {\n\t\t\tconsole.log(entry);\n\t\t}\n\t\treturn function appendToConsole() {\n\t\t\tthis.appenders.push(__consoleAppender__);\n\t\t\treturn __consoleAppender__;\n\t\t};\n\t})(),\n\t\n\t/** `appendToFile(filePath, flags='a', encoding='utf-8')` adds to the logger\n\tan appender that writes the log entries to a file using NodeJS's file system\n\tmodule.\n\t*/\n\tappendToFile: function appendToFile(filepath, flags, encoding) { // Node.js specific.\n\t\tfilepath = filepath || './log'+ (new Date()).format('yyyymmdd-hhnnss') +'.log';\n\t\tflags = flags !== undefined ? flags : 'a';\n\t\tencoding = encoding !== undefined ? encoding : 'utf-8';\n\t\tvar stream = require('fs').createWriteStream(filepath, {flags: flags, encoding: encoding});\n\t\tfunction fileAppender(entry) {\n\t\t\tstream.write(entry +'\\n');\n\t\t}\n\t\tthis.appenders.push(fileAppender);\n\t\treturn fileAppender;\n\t},\n\t\n\t/** `appendToHtml(htmlElement=document.body, maxEntries=all)` adds to the \n\tlogger an appender that writes the log entries as paragraphs inside the \n\tgiven `htmlElement`. The number of entries can be limited with `maxEntries`.\n\t\n\tWarning! Formatted entry text is assumed to be valid HTML and hence is not\n\tescaped.\n\t*/\n\tappendToHtml: function appendToHtml(htmlElement, maxEntries, reversed) { // Browser specific.\n\t\tmaxEntries = (+maxEntries) || Infinity;\n\t\treversed = !!reversed;\n\t\tif (typeof htmlElement === 'string') {\n\t\t\thtmlElement =  document.getElementById(htmlElement);\n\t\t} else {\n\t\t\thtmlElement = htmlElement || document.getElementsByTagName('body')[0];\n\t\t}\n\t\tvar entries = [];\n\t\tfunction htmlAppender(entry) {\n\t\t\tif (reversed) {\n\t\t\t\tentries.unshift(entry);\n\t\t\t\twhile (entries.length > maxEntries) {\n\t\t\t\t\tentries.pop();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tentries.push(entry);\n\t\t\t\twhile (entries.length > maxEntries) {\n\t\t\t\t\tentries.shift();\n\t\t\t\t}\n\t\t\t}\n\t\t\thtmlElement.innerHTML = entries.join('\\n');\n\t\t}\n\t\tthis.appenders.push(htmlAppender);\n\t\treturn htmlAppender;\n\t},\n\t\n\t/** `appendAsWorkerMessages(messageTag='log')` adds to the logger an \n\tappender that posts the log entries with the web workers `postMessage()`\n\tfunction.\n\t*/\n\tappendAsWorkerMessages: function appendAsWorkerMessages(messageTag) {\n\t\tmessageTag = ''+ (messageTag || 'log');\n\t\tfunction postMessageAppender(entry) {\n\t\t\tvar message = ({});\n\t\t\tmessage[messageTag] = entry;\n\t\t\tself.postMessage(JSON.stringify(message));\n\t\t}\n\t\tpostMessageAppender.format = function format(name, time, level, message) {\n\t\t\treturn {name: name, time: time, level: level, message: message};\n\t\t};\n\t\tthis.appenders.push(postMessageAppender);\n\t\treturn postMessageAppender;\n\t},\n\t\n\t// ## Other ################################################################\n\t\n\t/** `stats()` gets the logger's Statistics objects, creating it if \n\tnecessary.\n\t*/\n\tstats: function stats() {\n\t\treturn this.__stats__ || (this.__stats__ = new Statistics());\n\t}\n}); // declare Logger.\t\n\n/** The `Logger.ROOT` must be the final ancestor of all loggers. It is the \ndefault parent of the Logger constructor.\n*/\nLogger.ROOT = new Logger(\"\");\n","// See __prologue__.js\n\t[\tRandomness, Randomness.LinearCongruential, Randomness.MersenneTwister,\n\t\tStatistic, Statistics\n\t].forEach(function (type) {\n\t\ttype.__SERMAT__.identifier = exports.__package__ +'.'+ type.__SERMAT__.identifier;\n\t\texports.__SERMAT__.include.push(type);\n\t});\n\treturn exports;\n}\n"]}